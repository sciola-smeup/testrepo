[
    {
        "id": "99c2bf1ea943200a",
        "type": "tab",
        "label": "Set-IISP-Totem",
        "disabled": false,
        "info": "",
        "env": [
            {
                "name": "ImagesPath",
                "value": "/home/pi/Immagini/",
                "type": "str"
            },
            {
                "name": "ImagesExtension",
                "value": "[\"jpg\",\"jpeg\",\"png\"]",
                "type": "json"
            },
            {
                "name": "VideosPath",
                "value": "/home/pi/Video/",
                "type": "str"
            },
            {
                "name": "VideosExtension",
                "value": "[\"mp4\"]",
                "type": "json"
            },
            {
                "name": "DocsPath",
                "value": "/home/pi/Documenti/",
                "type": "str"
            },
            {
                "name": "DocsExtension",
                "value": "[\"pdf\"]",
                "type": "json"
            },
            {
                "name": "ImagesMaxFilesize",
                "value": "5120000",
                "type": "num"
            },
            {
                "name": "VideosMaxFilesize",
                "value": "102400000",
                "type": "num"
            },
            {
                "name": "DocsMaxFilesize",
                "value": "2048000",
                "type": "num"
            },
            {
                "name": "CrontabFilePath",
                "value": "/tmp/cronFile",
                "type": "str"
            },
            {
                "name": "DownloadsPath",
                "value": "/home/pi/Downloads/google-drive-upload/downloads",
                "type": "str"
            },
            {
                "name": "ExplodedZipPath",
                "value": "/home/pi/Downloads/google-drive-upload/explodedZip",
                "type": "str"
            }
        ]
    },
    {
        "id": "0d7cae74297f6793",
        "type": "tab",
        "label": "Get-IISP-Totem",
        "disabled": false,
        "info": "",
        "env": [
            {
                "name": "ImagesFolder",
                "value": "/home/pi/Immagini",
                "type": "str"
            },
            {
                "name": "ImagesExtension",
                "value": "[\"jpg\",\"jpeg\",\"png\"]",
                "type": "json"
            },
            {
                "name": "VideosFolder",
                "value": "/home/pi/Video",
                "type": "str"
            },
            {
                "name": "VideosExtension",
                "value": "[\"mp4\"]",
                "type": "json"
            },
            {
                "name": "DocsFolder",
                "value": "/home/pi/Documenti",
                "type": "str"
            },
            {
                "name": "DocsExtension",
                "value": "[\"pdf\",\"doc\",\"txt\"]",
                "type": "json"
            }
        ]
    },
    {
        "id": "66d6e2dbdbb2acba",
        "type": "tab",
        "label": "Mock-IISP-Call",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f0356b5dc9199074",
        "type": "subflow",
        "name": "Gdrive Zip files",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "10e09fec9b53193c"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1200,
                "y": 540,
                "wires": [
                    {
                        "id": "599e3e944bb02812",
                        "port": 0
                    },
                    {
                        "id": "599e3e944bb02812",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "c0a4bde7da642f57",
        "type": "subflow",
        "name": "Gdrive NON zip files",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "384fa59b3f2e7778"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 660,
                "y": 200,
                "wires": [
                    {
                        "id": "ae07cc426d925335",
                        "port": 0
                    },
                    {
                        "id": "ae07cc426d925335",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "2e123686d2476212",
        "type": "subflow",
        "name": "List Files",
        "info": "# List files\n\nWill list files in a directory.\n\nPath can be set in `msg.payload` or by setting the `DIRECTORY` environment variable.\n\nExtensions can be filtered by settings the `EXTENSIONS` environment variable to an Array of extensions.\n",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 80,
                "wires": [
                    {
                        "id": "ea2dcf3443139834"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1020,
                "y": 80,
                "wires": [
                    {
                        "id": "3acbb56bd1c157c4",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "DIRECTORY",
                "type": "str",
                "value": ""
            },
            {
                "name": "EXTENSIONS",
                "type": "json",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "fc57ea0b1c9c9990",
        "type": "subflow",
        "name": "Cron",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 120,
                "wires": [
                    {
                        "id": "959db6865d94b355"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1020,
                "y": 300,
                "wires": [
                    {
                        "id": "1d4d9e22ce41b411",
                        "port": 0
                    },
                    {
                        "id": "1d4d9e22ce41b411",
                        "port": 2
                    },
                    {
                        "id": "a8984bf65eedb96a",
                        "port": 0
                    },
                    {
                        "id": "a8984bf65eedb96a",
                        "port": 2
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "85762727287f2300",
        "type": "subflow",
        "name": "Shutdown",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 140,
                "wires": [
                    {
                        "id": "e094499eae2cac6a"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 800,
                "y": 140,
                "wires": [
                    {
                        "id": "82a88223ef50a4fc",
                        "port": 0
                    },
                    {
                        "id": "82a88223ef50a4fc",
                        "port": 1
                    },
                    {
                        "id": "82a88223ef50a4fc",
                        "port": 2
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "b15f08f24ad93a57",
        "type": "subflow",
        "name": "Remove Image",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 140,
                "wires": [
                    {
                        "id": "e5fb69f25443bae8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 660,
                "y": 140,
                "wires": [
                    {
                        "id": "2274fda5051d6947",
                        "port": 0
                    },
                    {
                        "id": "2274fda5051d6947",
                        "port": 1
                    },
                    {
                        "id": "2274fda5051d6947",
                        "port": 2
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "DIRECTORY",
                "type": "env",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "6856ac1d2d8fe5fa",
        "type": "subflow",
        "name": "Local Video",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 520,
                "wires": [
                    {
                        "id": "ab76f4aaa1179d43"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 2200,
                "y": 680,
                "wires": [
                    {
                        "id": "e1c0ed71661efa5a",
                        "port": 0
                    },
                    {
                        "id": "e1c0ed71661efa5a",
                        "port": 1
                    },
                    {
                        "id": "e1c0ed71661efa5a",
                        "port": 2
                    },
                    {
                        "id": "53b5ec1889264520",
                        "port": 0
                    },
                    {
                        "id": "f37f71090e81b986",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "DIRECTORY",
                "type": "env",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "cb65bb54dc1318d0",
        "type": "subflow",
        "name": "Pdf",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 120,
                "wires": [
                    {
                        "id": "ac27a014c495b646"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1320,
                "y": 280,
                "wires": [
                    {
                        "id": "c23b3c3ee7467ca0",
                        "port": 0
                    },
                    {
                        "id": "c23b3c3ee7467ca0",
                        "port": 1
                    },
                    {
                        "id": "c23b3c3ee7467ca0",
                        "port": 2
                    },
                    {
                        "id": "82f1cc7ca3a479b4",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "DIRECTORY",
                "type": "env",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "a9121f18e06a6127",
        "type": "subflow",
        "name": "Images",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 100,
                "wires": [
                    {
                        "id": "85874916159f882b"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1380,
                "y": 600,
                "wires": [
                    {
                        "id": "d653d7bcd69958bd",
                        "port": 0
                    },
                    {
                        "id": "d653d7bcd69958bd",
                        "port": 1
                    },
                    {
                        "id": "d653d7bcd69958bd",
                        "port": 2
                    },
                    {
                        "id": "08973a77a851ca3d",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "DIRECTORY",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "190388cf4d3f5366",
        "type": "subflow",
        "name": "Youtube Playlist",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 100,
                "wires": [
                    {
                        "id": "f08531d00d6b9055"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 900,
                "y": 180,
                "wires": [
                    {
                        "id": "76e1d5ce1897ecdd",
                        "port": 0
                    },
                    {
                        "id": "76e1d5ce1897ecdd",
                        "port": 1
                    },
                    {
                        "id": "76e1d5ce1897ecdd",
                        "port": 2
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "f51b1854e03d3293",
        "type": "subflow",
        "name": "Web Kiosk",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 100,
                "wires": [
                    {
                        "id": "c742c036bde6129f"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1060,
                "y": 320,
                "wires": [
                    {
                        "id": "4d2055384e949c8b",
                        "port": 0
                    },
                    {
                        "id": "4d2055384e949c8b",
                        "port": 1
                    },
                    {
                        "id": "4d2055384e949c8b",
                        "port": 2
                    },
                    {
                        "id": "15b3a5c807f447ec",
                        "port": 0
                    },
                    {
                        "id": "15b3a5c807f447ec",
                        "port": 1
                    },
                    {
                        "id": "15b3a5c807f447ec",
                        "port": 2
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "9c1c79b2f416c9fd",
        "type": "subflow",
        "name": "Reboot",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 120,
                "wires": [
                    {
                        "id": "153fdd5b3379dc85"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 720,
                "y": 120,
                "wires": [
                    {
                        "id": "a2dc392c6dafaa78",
                        "port": 0
                    },
                    {
                        "id": "a2dc392c6dafaa78",
                        "port": 1
                    },
                    {
                        "id": "a2dc392c6dafaa78",
                        "port": 2
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "a86c3d7dbe86dcbf",
        "type": "subflow",
        "name": "Stato Monitor",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 140,
                "wires": [
                    {
                        "id": "debaa3553f4e4c68"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1160,
                "y": 140,
                "wires": [
                    {
                        "id": "7e6172e64b4f8d56",
                        "port": 0
                    },
                    {
                        "id": "7e6172e64b4f8d56",
                        "port": 1
                    },
                    {
                        "id": "7e6172e64b4f8d56",
                        "port": 2
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "271e7f8f862c3b85",
        "type": "subflow",
        "name": "Rotazione Schermo",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 160,
                "wires": [
                    {
                        "id": "409016c9113bbc2b"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1200,
                "y": 160,
                "wires": [
                    {
                        "id": "40c5559583602da0",
                        "port": 0
                    },
                    {
                        "id": "40c5559583602da0",
                        "port": 1
                    },
                    {
                        "id": "40c5559583602da0",
                        "port": 2
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "a0c114bc4ce3a7fa",
        "type": "subflow",
        "name": "GDrive Upload",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 100,
                "wires": [
                    {
                        "id": "9c03c2e70bcdc160"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1160,
                "y": 120,
                "wires": [
                    {
                        "id": "e9974438eb2536f5",
                        "port": 2
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "DownloadsPath",
                "type": "env",
                "value": ""
            },
            {
                "name": "ImagesPath",
                "type": "env",
                "value": ""
            },
            {
                "name": "VideosPath",
                "type": "env",
                "value": ""
            },
            {
                "name": "DocsPath",
                "type": "env",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "34f1ece98c9c013c",
        "type": "subflow",
        "name": "Close ALL pgm",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 60,
                "wires": [
                    {
                        "id": "c5b07b9d5db44a58"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 660,
                "y": 60,
                "wires": [
                    {
                        "id": "8775ed3eb91bfcbf",
                        "port": 2
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "ca0132a8264ea812",
        "type": "subflow",
        "name": "Files Manager",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 240,
                "wires": [
                    {
                        "id": "9b89b27e20eb1936"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1060,
                "y": 240,
                "wires": [
                    {
                        "id": "6af34379e0f98f69",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "ImagesExtension",
                "type": "env",
                "value": ""
            },
            {
                "name": "VideosExtension",
                "type": "env",
                "value": ""
            },
            {
                "name": "DocsExtension",
                "type": "env",
                "value": ""
            },
            {
                "name": "ImagesPath",
                "type": "env",
                "value": ""
            },
            {
                "name": "VideosPath",
                "type": "env",
                "value": ""
            },
            {
                "name": "DocsPath",
                "type": "env",
                "value": ""
            },
            {
                "name": "DownloadsPath",
                "type": "env",
                "value": ""
            },
            {
                "name": "ExplodedZipPath",
                "type": "env",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "34a1ccf26049ee71",
        "type": "group",
        "z": "99c2bf1ea943200a",
        "name": "",
        "style": {
            "label": true,
            "fill": "#ffbfbf",
            "fill-opacity": "0.5",
            "color": "#001f60"
        },
        "nodes": [
            "7df6fd7cf4c952cc",
            "6ace0cc962ad24fd",
            "ee5d102664a14d0e",
            "f42fa23f35090652",
            "ac05f189b712d3f8",
            "9fd5f7c222a3e82a",
            "c79ac39aa5853c59"
        ],
        "x": 54,
        "y": 19,
        "w": 1212,
        "h": 162
    },
    {
        "id": "a3060bc8377bea6e",
        "type": "group",
        "z": "99c2bf1ea943200a",
        "name": "ENDPOINT",
        "style": {
            "fill": "#bfdbef",
            "fill-opacity": "0.5",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "a5d47b82b61421de",
            "8671722b2b04ccb2",
            "a7d3014ec758ae68",
            "a49067f625f9ab61",
            "ef5a2342d5108069",
            "a2f7092d825f2496",
            "97c7fe41e5423204",
            "4981e0d830f12f29",
            "9f3b83211ef626fd",
            "14886bbe0b246078",
            "340e4cfb29785794",
            "544390f09136d7e8",
            "666b43953b1f143c",
            "a753816b986d3065",
            "c43e545fcca98758",
            "95e067a57b6c3d05"
        ],
        "x": 54,
        "y": 199,
        "w": 1232,
        "h": 1022
    },
    {
        "id": "fb36774ee386e58d",
        "type": "group",
        "z": "0d7cae74297f6793",
        "name": "",
        "style": {
            "fill": "#bfdbef",
            "label": true,
            "fill-opacity": "0.5"
        },
        "nodes": [
            "cb9ae2a8febce7b1",
            "7fc49da05ada9de0",
            "f9204db9b9963ffb",
            "a66e2542c1490381",
            "08788bc0ecdc1975",
            "5f5e2d48f0135e0d",
            "05c6a9bcbaed8adc",
            "2333e1d48ba2e4f2",
            "5874d7d9bcbe8cfe",
            "1b740dececacd27c",
            "043ab8df78d8784f",
            "cd5ca8b56dcc0603",
            "e78ec20130f6bfea",
            "59f8e74630d8381b",
            "f5d75d9a624236f1",
            "474538c42c5c3f55",
            "2253d1a43967d5bb",
            "6e6a7d31ae2869e6",
            "de5b77757b5bfead",
            "0c012f1d84949fd1",
            "80584b5b1255c365",
            "bb79475ff580da3b",
            "d7b95bd44bf62fd2",
            "a9f9839fb3993791",
            "70433427a70dfe3b",
            "2d424ee1016ffd9a",
            "45143d9728216165"
        ],
        "x": 44,
        "y": 419,
        "w": 1232,
        "h": 462
    },
    {
        "id": "ebc166d187a2a690",
        "type": "group",
        "z": "0d7cae74297f6793",
        "name": "",
        "style": {
            "fill": "#bfdbef",
            "label": true,
            "fill-opacity": "0.5"
        },
        "nodes": [
            "4a1795b109331ca6",
            "505172e99aa33dda",
            "11148f485a19766a",
            "cefb27339cb66508",
            "094018b0fcbd967b",
            "f05ef9ac8f736621",
            "b7d3ef8b1965bb60",
            "7be81b77db72cbd6",
            "b8698506262b99b3",
            "2647530c8d1cefa8",
            "d11966359f881a0d",
            "70795216a9c35b5a",
            "e92e8e9f4bc8f242",
            "a80a7e11d3f62e19",
            "9ef19991933fd951",
            "8c66c476ee5cebf4",
            "1bea58fc8e3fcf35",
            "01f81a2812a17874",
            "ab24b88a5852fc8c",
            "1af2c2dbb4e321e8",
            "fbe9feb5f5bb5a75",
            "0bf6c19a44fb6844",
            "87262c6b23bc6305",
            "dbff78d33bd3e6ec",
            "298c170aacd146d6",
            "8d8d5dd682d82887",
            "ae45b139053a3ebf",
            "08817fd62def48c9"
        ],
        "x": 54,
        "y": 939,
        "w": 1112,
        "h": 442
    },
    {
        "id": "0295182fd0814c28",
        "type": "group",
        "z": "0d7cae74297f6793",
        "name": "NON TOCCARE!!!",
        "style": {
            "fill": "#ffbfbf",
            "fill-opacity": "0.5",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "5e5448d093ba3a4f",
            "748a080ecb9a8dfb",
            "078c0703434c3c35",
            "250e194239ef9c72",
            "95b2a791d439ecb0"
        ],
        "x": 34,
        "y": 19,
        "w": 1072,
        "h": 122
    },
    {
        "id": "e4b6fe2f71716c31",
        "type": "group",
        "z": "0d7cae74297f6793",
        "name": "ENDPOINT",
        "style": {
            "fill": "#bfdbef",
            "fill-opacity": "0.5",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "9ad17e43abccf3c4",
            "69d4b9a80bf42864",
            "b004e3f4e09572d0",
            "1fc004a523fae7b1",
            "19a02341ff67cac6",
            "dcd8eac8b8294961",
            "d4875a09f17a61e3",
            "3ab48e40325b05e8",
            "591a976044faec25",
            "fa80a359dee8b5a2",
            "5d1a1de1cebc4b50",
            "5f7d02cf2e04f0f4"
        ],
        "x": 34,
        "y": 179,
        "w": 1632,
        "h": 202
    },
    {
        "id": "7e5aef6acb610f0c",
        "type": "group",
        "z": "66d6e2dbdbb2acba",
        "name": "WRONG CALL",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "fill-opacity": "0.5",
            "color": "#001f60"
        },
        "nodes": [
            "4f7a0dd0324ac7a8",
            "4380513b942b921b",
            "e878a75e121d86d0",
            "8705e9fb4b6039a9",
            "ebc8384614fd78bf",
            "c8bb3614434703a2"
        ],
        "x": 34,
        "y": 159,
        "w": 792,
        "h": 202
    },
    {
        "id": "996b52e89a679388",
        "type": "group",
        "z": "66d6e2dbdbb2acba",
        "name": "CORRECT CALL",
        "style": {
            "fill": "#e3f3d3",
            "label": true,
            "fill-opacity": "0.5",
            "color": "#001f60"
        },
        "nodes": [
            "1846f06ec51ee354",
            "8af135267af3479c",
            "bf5a5bb193514ae7",
            "a69c7be4dd468b0f",
            "2c46d84fd9068a8f",
            "53c232d00c235e52",
            "feed6fc54609d280",
            "5bb9ceb0c39e8b88",
            "2c9120db6a210a39",
            "90449f5f0cf6a6e6",
            "f68c93834a4547c1",
            "3bf0959c7be4726e",
            "e7f71d67146ba989",
            "8d7dfbb252fea970",
            "dc89b0d31ac3108c",
            "f46a3f1beb10e098",
            "01f04fb60ea356f6",
            "82870502befb97d6",
            "6f9bb6de3d7e20c4",
            "e1c1a91d114e5846",
            "42ee86e291d4e80e",
            "3904aff0408817d4"
        ],
        "x": 34,
        "y": 379,
        "w": 792,
        "h": 882
    },
    {
        "id": "80f2b6e54f5427ca",
        "type": "group",
        "z": "66d6e2dbdbb2acba",
        "name": "",
        "style": {
            "fill": "#bfdbef",
            "label": true,
            "fill-opacity": "0.5"
        },
        "nodes": [
            "8eaf3a09e2e3488d",
            "05e02a164dc4bcc6",
            "aa2e70f569ffb2ad",
            "e093b5e6472b714d"
        ],
        "x": 34,
        "y": 19,
        "w": 792,
        "h": 122
    },
    {
        "id": "d235042c5559638c",
        "type": "group",
        "z": "99c2bf1ea943200a",
        "name": "Upload (GDrive) File in Folder",
        "style": {
            "label": true,
            "fill": "#bfdbef",
            "fill-opacity": "0.5",
            "color": "#001f60"
        },
        "nodes": [
            "8fd44612f3b9e7ee",
            "dc2b0b7a3196d11c",
            "46b1ca9bfe7d89b8",
            "ab4f8ea0f7a919bd",
            "789a3bfab97317b5",
            "eb226f2b6fdb06db",
            "be6d0b1c35abc7af",
            "5b4484c3fbb87dca"
        ],
        "x": 54,
        "y": 1259,
        "w": 652,
        "h": 242
    },
    {
        "id": "e7a23b733808ad59",
        "type": "group",
        "z": "a0c114bc4ce3a7fa",
        "name": "Cancellazione tabella \"fileupload\"",
        "style": {
            "fill": "#ffffbf",
            "fill-opacity": "0.5",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "eaf29b27f3f99481",
            "b8b478fd1046e1da"
        ],
        "x": 394,
        "y": 59
    },
    {
        "id": "c43e545fcca98758",
        "type": "group",
        "z": "99c2bf1ea943200a",
        "g": "a3060bc8377bea6e",
        "name": "Operating Mode",
        "style": {
            "label": true,
            "stroke": "#ff0000",
            "color": "#001f60"
        },
        "nodes": [
            "da3ead2c9869c5fe",
            "ce0809e061f1938c",
            "598037f8599ec2fb",
            "fd0bfe50aaa04784",
            "0d80bff766c677fd",
            "7d72c40b9e504908",
            "698a4450fbf4b5e6",
            "4551916871f8bd36",
            "1c61d33bacefe0c3",
            "08e5ae010b3c3203"
        ],
        "x": 374,
        "y": 459,
        "w": 482,
        "h": 242
    },
    {
        "id": "95e067a57b6c3d05",
        "type": "group",
        "z": "99c2bf1ea943200a",
        "g": "a3060bc8377bea6e",
        "name": "Utilities",
        "style": {
            "stroke": "#0070c0",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "2703977dac7d8ee9",
            "1875ce9f1fa7a074",
            "ed162f8cc9c08efd",
            "c87e349c6c03acfc",
            "0d7a32d3bc3a1721",
            "776a7f9862a0a294",
            "98786b901eae04c9",
            "eb16757cf1109ac4",
            "090952e975643088",
            "b4560dff3b75db0a",
            "84708bcbecaff887",
            "9464be68719cfe1a",
            "0a4dd8c607623b70",
            "8053965130ed5a57",
            "4c6ef64678bb80ac",
            "a76c8fa5f991f29c",
            "829384a545fe3a01",
            "d015447780446183"
        ],
        "x": 374,
        "y": 739,
        "w": 512,
        "h": 402
    },
    {
        "id": "8ed184d0cab7976b",
        "type": "sqlitedb",
        "db": "/home/pi/totem.db",
        "mode": "RWC"
    },
    {
        "id": "5a4fb42b26b82069",
        "type": "function",
        "z": "f0356b5dc9199074",
        "name": "create exec cmd",
        "func": "msg.payload = `wget --quiet --save-cookies /tmp/cookies.txt --keep-session-cookies --no-check-certificate 'https://docs.google.com/uc?export=download&id=${msg.gdrive.id}' -O- | sed -rn 's/.*confirm=([0-9A-Za-z_]+).*/\\\\1\\\\n/p'`\n\n/*msg.payload = `wget --load-cookies /tmp/cookies.txt \\\n\"https://docs.google.com/uc?export=download&confirm=$(wget --quiet --save-cookies /tmp/cookies.txt --keep-session-cookies --no-check-certificate 'https://docs.google.com/uc?export=download&id=${gdriveId}' -O- | sed -rn ${regex})&id=${gdriveId}\" \\\n-O /tmp/${gdriveFilename} \\\n&& rm -rf /tmp/cookies.txt \\\n&& unzip /tmp/${gdriveFilename} -d /tmp`\n*/\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 140,
        "wires": [
            [
                "871d3ca68bf9cd1e"
            ]
        ]
    },
    {
        "id": "871d3ca68bf9cd1e",
        "type": "exec",
        "z": "f0356b5dc9199074",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Store Cookies in /tmp",
        "x": 440,
        "y": 140,
        "wires": [
            [],
            [],
            [
                "bc0cde375e5a93a4"
            ]
        ]
    },
    {
        "id": "35d058fbb2ca5449",
        "type": "function",
        "z": "f0356b5dc9199074",
        "name": "create exec cmd",
        "func": "const result = msg.payload;\n//msg.payload = `wget --load-cookies /tmp/cookies.txt \"https://docs.google.com/uc?export=download&confirm=$(wget --quiet --save-cookies /tmp/cookies.txt --keep-session-cookies --no-check-certificate 'https://docs.google.com/uc?export=download&id=${gdriveId}' -O- | sed -rn 's/.*confirm=([0-9A-Za-z_]+).*/\\\\1\\\\n/p')&id=${gdriveId}\" -O ${env.get('DIRECTORY')}/${gdriveFilename} && rm -rf /tmp/cookies.txt`\n\nmsg.payload = `wget --load-cookies /tmp/cookies.txt \"https://docs.google.com/uc?export=download&confirm=${result}.*/\\\\1\\\\n/p')&id=${msg.gdrive.id}\" -O \"/tmp/${msg.gdrive.name}\"`\n\n/*msg.payload = `wget --load-cookies /tmp/cookies.txt \\\n\"https://docs.google.com/uc?export=download&confirm=$(wget --quiet --save-cookies /tmp/cookies.txt --keep-session-cookies --no-check-certificate 'https://docs.google.com/uc?export=download&id=${gdriveId}' -O- | sed -rn ${regex})&id=${gdriveId}\" \\\n-O /tmp/${gdriveFilename} \\\n&& rm -rf /tmp/cookies.txt \\\n&& unzip /tmp/${gdriveFilename} -d /tmp`\n*/\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 200,
        "wires": [
            [
                "d7e6a04541445cbb"
            ]
        ]
    },
    {
        "id": "d7e6a04541445cbb",
        "type": "exec",
        "z": "f0356b5dc9199074",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Download file in /tmp",
        "x": 440,
        "y": 200,
        "wires": [
            [],
            [],
            [
                "1dc3adebcf46ab6c"
            ]
        ]
    },
    {
        "id": "e881d761c92d08ef",
        "type": "exec",
        "z": "f0356b5dc9199074",
        "command": "mkdir -p /tmp/explode",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Create /tmp/explode/",
        "x": 240,
        "y": 260,
        "wires": [
            [],
            [],
            [
                "59f4e977c41666df"
            ]
        ]
    },
    {
        "id": "13c9dd5b3d405c43",
        "type": "exec",
        "z": "f0356b5dc9199074",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "unzip file in /tmp/explode/",
        "x": 450,
        "y": 320,
        "wires": [
            [],
            [],
            [
                "f8bed343162b25b1"
            ]
        ]
    },
    {
        "id": "bc0cde375e5a93a4",
        "type": "switch",
        "z": "f0356b5dc9199074",
        "name": "",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 650,
        "y": 140,
        "wires": [
            [
                "35d058fbb2ca5449"
            ]
        ]
    },
    {
        "id": "1dc3adebcf46ab6c",
        "type": "switch",
        "z": "f0356b5dc9199074",
        "name": "",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 650,
        "y": 200,
        "wires": [
            [
                "e881d761c92d08ef"
            ]
        ]
    },
    {
        "id": "59f4e977c41666df",
        "type": "switch",
        "z": "f0356b5dc9199074",
        "name": "",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 450,
        "y": 260,
        "wires": [
            [
                "0b10eae7b42081b8"
            ]
        ]
    },
    {
        "id": "f8bed343162b25b1",
        "type": "switch",
        "z": "f0356b5dc9199074",
        "name": "",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 650,
        "y": 320,
        "wires": [
            [
                "8582a491c6a0c20c",
                "d3e3bfa4f7d1d03b",
                "f9ddc1125c0ceccd"
            ]
        ]
    },
    {
        "id": "0b10eae7b42081b8",
        "type": "function",
        "z": "f0356b5dc9199074",
        "name": "create exec cmd",
        "func": "msg.payload = `unzip \"/tmp/${msg.gdrive.name}\" -d /tmp/explode/`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 320,
        "wires": [
            [
                "13c9dd5b3d405c43"
            ]
        ]
    },
    {
        "id": "83b58aaffa8bfbad",
        "type": "fs-file-lister",
        "z": "f0356b5dc9199074",
        "name": "List Files",
        "start": "/tmp/explode",
        "pattern": "",
        "folders": "*",
        "hidden": false,
        "lstype": "files",
        "path": false,
        "single": true,
        "depth": 0,
        "stat": false,
        "showWarnings": false,
        "x": 400,
        "y": 440,
        "wires": [
            [
                "81dac4528c076174"
            ]
        ]
    },
    {
        "id": "10e09fec9b53193c",
        "type": "exec",
        "z": "f0356b5dc9199074",
        "command": "rm -r /tmp/*",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "rm /tmp/*",
        "x": 200,
        "y": 80,
        "wires": [
            [],
            [],
            [
                "5a4fb42b26b82069"
            ]
        ]
    },
    {
        "id": "8582a491c6a0c20c",
        "type": "function",
        "z": "f0356b5dc9199074",
        "name": "Filter Image file",
        "func": "const ImagesExtension = env.get('ImagesExtension');\nconst patterns = ImagesExtension.map(e => {return \"*.\".concat(e)});\nconst imagePatterns = patterns.join('|');\n\nmsg.payload = {\n    \"pattern\": imagePatterns,\n    }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 440,
        "wires": [
            [
                "83b58aaffa8bfbad"
            ]
        ]
    },
    {
        "id": "b332ff482b23e83c",
        "type": "fs-file-lister",
        "z": "f0356b5dc9199074",
        "name": "List Files",
        "start": "/tmp/explode",
        "pattern": "",
        "folders": "*",
        "hidden": false,
        "lstype": "files",
        "path": false,
        "single": true,
        "depth": 0,
        "stat": false,
        "showWarnings": false,
        "x": 400,
        "y": 540,
        "wires": [
            [
                "df6ae2c68c656600"
            ]
        ]
    },
    {
        "id": "d3e3bfa4f7d1d03b",
        "type": "function",
        "z": "f0356b5dc9199074",
        "name": "Filter Video File",
        "func": "const VideosExtension = env.get('VideosExtension');\nconst patterns = VideosExtension.map(e => {return \"*.\".concat(e)});\nconst videosPatterns = patterns.join('|');\n\nmsg.payload = {\n    \"pattern\": videosPatterns,\n    }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 540,
        "wires": [
            [
                "b332ff482b23e83c"
            ]
        ]
    },
    {
        "id": "dc18f0a030c8908c",
        "type": "fs-file-lister",
        "z": "f0356b5dc9199074",
        "name": "List Files",
        "start": "/tmp/explode",
        "pattern": "",
        "folders": "*",
        "hidden": false,
        "lstype": "files",
        "path": false,
        "single": true,
        "depth": 0,
        "stat": false,
        "showWarnings": false,
        "x": 400,
        "y": 640,
        "wires": [
            [
                "fdbf0a7948e576f5"
            ]
        ]
    },
    {
        "id": "f9ddc1125c0ceccd",
        "type": "function",
        "z": "f0356b5dc9199074",
        "name": "Filter Docs",
        "func": "const DocsExtension = env.get('DocsExtension');\nconst patterns = DocsExtension.map(e => {return \"*.\".concat(e)});\nconst docsPatterns = patterns.join('|');\n\nmsg.payload = {\n    \"pattern\": docsPatterns,\n    }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 640,
        "wires": [
            [
                "dc18f0a030c8908c"
            ]
        ]
    },
    {
        "id": "81dac4528c076174",
        "type": "switch",
        "z": "f0356b5dc9199074",
        "name": "Num files",
        "property": "$count(payload)\t",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 560,
        "y": 440,
        "wires": [
            [
                "b9a6b78cce97ca0a"
            ],
            [
                "3dda014b919386da"
            ]
        ]
    },
    {
        "id": "b9a6b78cce97ca0a",
        "type": "function",
        "z": "f0356b5dc9199074",
        "name": "create exec cmd",
        "func": "const file = msg.payload[0];\nmsg.payload = `mv -f \"/tmp/explode/${file}\" ${env.get('ImagesPath')}`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 420,
        "wires": [
            [
                "599e3e944bb02812"
            ]
        ]
    },
    {
        "id": "c8b49657923da064",
        "type": "function",
        "z": "f0356b5dc9199074",
        "name": "create exec cmd",
        "func": "const files = msg.payload.join(',');\nmsg.payload = `mv -f \"/tmp/explode/${files}\" ${env.get('VideosPath')}`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 520,
        "wires": [
            [
                "599e3e944bb02812"
            ]
        ]
    },
    {
        "id": "a1ed9617867fe38b",
        "type": "function",
        "z": "f0356b5dc9199074",
        "name": "create exec cmd",
        "func": "const file = msg.payload[0];\nmsg.payload = `mv -f \"/tmp/explode/${file}\" ${env.get('DocsPath')}`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 620,
        "wires": [
            [
                "599e3e944bb02812"
            ]
        ]
    },
    {
        "id": "3dda014b919386da",
        "type": "function",
        "z": "f0356b5dc9199074",
        "name": "create exec cmd",
        "func": "const files = msg.payload.join(',');\nmsg.payload = `mv -f \"/tmp/explode/{${files}}\" ${env.get('ImagesPath')}`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 460,
        "wires": [
            [
                "599e3e944bb02812"
            ]
        ]
    },
    {
        "id": "47204c7343c88e44",
        "type": "function",
        "z": "f0356b5dc9199074",
        "name": "create exec cmd",
        "func": "const file = msg.payload[0];\nmsg.payload = `mv -f \"/tmp/explode/{${file}}\" ${env.get('VideosPath')}`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 560,
        "wires": [
            [
                "599e3e944bb02812"
            ]
        ]
    },
    {
        "id": "4d7f2ec53f762759",
        "type": "function",
        "z": "f0356b5dc9199074",
        "name": "create exec cmd",
        "func": "const files = msg.payload.join(',');\nmsg.payload = `mv -f \"/tmp/explode/{${files}}\" ${env.get('VideosPath')}`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 660,
        "wires": [
            [
                "599e3e944bb02812"
            ]
        ]
    },
    {
        "id": "df6ae2c68c656600",
        "type": "switch",
        "z": "f0356b5dc9199074",
        "name": "Num files",
        "property": "$count(payload)\t",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 560,
        "y": 540,
        "wires": [
            [
                "c8b49657923da064"
            ],
            [
                "47204c7343c88e44"
            ]
        ]
    },
    {
        "id": "fdbf0a7948e576f5",
        "type": "switch",
        "z": "f0356b5dc9199074",
        "name": "Num files",
        "property": "$count(payload)\t",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 560,
        "y": 640,
        "wires": [
            [
                "a1ed9617867fe38b"
            ],
            [
                "4d7f2ec53f762759"
            ]
        ]
    },
    {
        "id": "599e3e944bb02812",
        "type": "exec",
        "z": "f0356b5dc9199074",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Move files in correct folder",
        "x": 1010,
        "y": 540,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "384fa59b3f2e7778",
        "type": "exec",
        "z": "c0a4bde7da642f57",
        "command": "rm -r /tmp/*",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "rm /tmp/*",
        "x": 200,
        "y": 80,
        "wires": [
            [],
            [],
            [
                "333ffb59512f3329"
            ]
        ]
    },
    {
        "id": "333ffb59512f3329",
        "type": "function",
        "z": "c0a4bde7da642f57",
        "name": "create exec cmd",
        "func": "msg.payload = `wget --quiet --save-cookies /tmp/cookies.txt --keep-session-cookies --no-check-certificate 'https://docs.google.com/uc?export=download&id=${msg.gdrive.id}' -O- | sed -rn 's/.*confirm=([0-9A-Za-z_]+).*/\\\\1\\\\n/p'`\n\n/*msg.payload = `wget --load-cookies /tmp/cookies.txt \\\n\"https://docs.google.com/uc?export=download&confirm=$(wget --quiet --save-cookies /tmp/cookies.txt --keep-session-cookies --no-check-certificate 'https://docs.google.com/uc?export=download&id=${gdriveId}' -O- | sed -rn ${regex})&id=${gdriveId}\" \\\n-O /tmp/${gdriveFilename} \\\n&& rm -rf /tmp/cookies.txt \\\n&& unzip /tmp/${gdriveFilename} -d /tmp`\n*/\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 140,
        "wires": [
            [
                "dc5fa106ab800692"
            ]
        ]
    },
    {
        "id": "dc5fa106ab800692",
        "type": "exec",
        "z": "c0a4bde7da642f57",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Store Cookies in /tmp",
        "x": 440,
        "y": 140,
        "wires": [
            [],
            [],
            [
                "26657c3442620e91"
            ]
        ]
    },
    {
        "id": "26657c3442620e91",
        "type": "switch",
        "z": "c0a4bde7da642f57",
        "name": "",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 650,
        "y": 140,
        "wires": [
            [
                "924aefb5ab846e44"
            ]
        ]
    },
    {
        "id": "924aefb5ab846e44",
        "type": "function",
        "z": "c0a4bde7da642f57",
        "name": "create exec cmd",
        "func": "const result = msg.payload;\nconst directory = flow.get('$parent.DIRECTORY');\n\nmsg.payload = `wget --load-cookies /tmp/cookies.txt \"https://docs.google.com/uc?export=download&confirm=${result}.*/\\\\1\\\\n/p')&id=${msg.gdrive.id}\" -O \"/${directory}/${msg.gdrive.name}\"`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 200,
        "wires": [
            [
                "ae07cc426d925335"
            ]
        ]
    },
    {
        "id": "ae07cc426d925335",
        "type": "exec",
        "z": "c0a4bde7da642f57",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Download file in folder",
        "x": 440,
        "y": 200,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "24216e7583f1a4f5",
        "type": "exec",
        "z": "2e123686d2476212",
        "command": "ls",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "ls msg.payload",
        "x": 660,
        "y": 80,
        "wires": [
            [
                "3acbb56bd1c157c4"
            ],
            [],
            []
        ]
    },
    {
        "id": "3acbb56bd1c157c4",
        "type": "change",
        "z": "2e123686d2476212",
        "name": "split and filter",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "(\t    $files := [$split(payload, '\\n')[$ != \"\"]];\t    $count($env('EXTENSIONS')) = 0 ? [$files] : [$files[$split($, '.')[-1] in $env('EXTENSIONS')]];\t)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "ea2dcf3443139834",
        "type": "switch",
        "z": "2e123686d2476212",
        "name": "$env('DIRECTORY')",
        "property": "$env('DIRECTORY')",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 240,
        "y": 80,
        "wires": [
            [
                "24216e7583f1a4f5"
            ],
            [
                "06d97b1553434185"
            ]
        ]
    },
    {
        "id": "06d97b1553434185",
        "type": "change",
        "z": "2e123686d2476212",
        "name": "msg.payload = $env('DIRECTORY')",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DIRECTORY",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 180,
        "wires": [
            [
                "24216e7583f1a4f5"
            ]
        ]
    },
    {
        "id": "cb07a911d384453d",
        "type": "comment",
        "z": "fc57ea0b1c9c9990",
        "name": "Crontab",
        "info": "",
        "x": 70,
        "y": 60,
        "wires": []
    },
    {
        "id": "959db6865d94b355",
        "type": "function",
        "z": "fc57ea0b1c9c9990",
        "name": "Extract CronList",
        "func": "/**\n * Mi aspetto un payload di questo tipo\n * \"{\n *      \"id\": \"CRON\",\n *      \"v\": \"<1 o 0>|[<cron1>]|[<cron2>]|...\"\n *  }\n * ad esempio\n * {\n *      \"id\": \"CRON\",\n *      \"v\": \"1|[5 * * * * sudo reboot]|[10 * * * * /bin/bash]\"\n *  }\n * \n*/\n\n\nconst splittedValue = msg.cmd.v.split('|');\nlet tipo = '0';\nlet cronStr = \"\";\n\nif( splittedValue.length !== 0 ){\n    tipo = splittedValue[0]\n}\n\n\nif( splittedValue.length >= 2 ) {\n    // Remove first item with 0 or 1\n    splittedValue.shift();\n    \n    const cronList = splittedValue.map(elem => {\n        return elem.slice(1,elem.length - 1);\n    })\n    \n    msg.cronList = cronList;\n    \n    cronStr = cronList.join('\\n');\n}\n\n(tipo === '0')\n  ? msg.topic = \"UPDATE sistema set CRON='0'\"\n  : msg.topic = `UPDATE sistema set CRON='${splittedValue.join('|')}'`;\n\nmsg.cronStr = cronStr;\nmsg.tipo = tipo;\nmsg.payload = cronStr;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 120,
        "wires": [
            [
                "104b214c7a849b4b"
            ]
        ]
    },
    {
        "id": "da065c82473f90aa",
        "type": "switch",
        "z": "fc57ea0b1c9c9990",
        "name": "",
        "property": "tipo",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 170,
        "y": 300,
        "wires": [
            [
                "1d4d9e22ce41b411"
            ],
            [
                "1c125bcc9c578523",
                "99bfd156b976b859"
            ]
        ]
    },
    {
        "id": "1d4d9e22ce41b411",
        "type": "exec",
        "z": "fc57ea0b1c9c9990",
        "command": "crontab -r",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Remove ALL cron job",
        "x": 360,
        "y": 280,
        "wires": [
            [
                "73c5fba4fa59b445"
            ],
            [],
            [
                "73c5fba4fa59b445"
            ]
        ]
    },
    {
        "id": "73c5fba4fa59b445",
        "type": "debug",
        "z": "fc57ea0b1c9c9990",
        "name": "Delete Cron",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 240,
        "wires": []
    },
    {
        "id": "99bfd156b976b859",
        "type": "file",
        "z": "fc57ea0b1c9c9990",
        "name": "write temp cron file",
        "filename": "${CRONTAB_FILEPATH}",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 390,
        "y": 380,
        "wires": [
            [
                "9df8f896867a8f70"
            ]
        ]
    },
    {
        "id": "1c125bcc9c578523",
        "type": "debug",
        "z": "fc57ea0b1c9c9990",
        "name": "Create CronList",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 440,
        "wires": []
    },
    {
        "id": "9df8f896867a8f70",
        "type": "exec",
        "z": "fc57ea0b1c9c9990",
        "command": "crontab -r",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Remove ALL cron job",
        "x": 620,
        "y": 380,
        "wires": [
            [
                "b7d65f526d860c16"
            ],
            [],
            []
        ]
    },
    {
        "id": "a8984bf65eedb96a",
        "type": "exec",
        "z": "fc57ea0b1c9c9990",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Insert cronList in crontab",
        "x": 850,
        "y": 520,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "b7d65f526d860c16",
        "type": "function",
        "z": "fc57ea0b1c9c9990",
        "name": "Extract CronList",
        "func": "const cronFilePath = env.get('CRONTAB_FILEPATH')\n\nmsg.payload = `crontab ${cronFilePath}`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 460,
        "wires": [
            [
                "a8984bf65eedb96a"
            ]
        ]
    },
    {
        "id": "104b214c7a849b4b",
        "type": "sqlite",
        "z": "fc57ea0b1c9c9990",
        "mydb": "8ed184d0cab7976b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Store msg.topic on DB",
        "x": 400,
        "y": 120,
        "wires": [
            [
                "811bfddab3d6ea21"
            ]
        ]
    },
    {
        "id": "811bfddab3d6ea21",
        "type": "change",
        "z": "fc57ea0b1c9c9990",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "cronStr",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 120,
        "wires": [
            [
                "da065c82473f90aa"
            ]
        ]
    },
    {
        "id": "3d35d855631735e2",
        "type": "comment",
        "z": "85762727287f2300",
        "name": "Shutdown",
        "info": "",
        "x": 100,
        "y": 80,
        "wires": []
    },
    {
        "id": "e094499eae2cac6a",
        "type": "exec",
        "z": "85762727287f2300",
        "command": "pkill -o chromium ; pkill -o pqiv ; pkill -o vlc",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Kill ALL",
        "x": 200,
        "y": 140,
        "wires": [
            [
                "b01f7baf59726aa5"
            ],
            [],
            []
        ]
    },
    {
        "id": "b01f7baf59726aa5",
        "type": "delay",
        "z": "85762727287f2300",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 380,
        "y": 140,
        "wires": [
            [
                "82a88223ef50a4fc"
            ]
        ]
    },
    {
        "id": "82a88223ef50a4fc",
        "type": "exec",
        "z": "85762727287f2300",
        "command": "sudo shutdown now",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 580,
        "y": 140,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "cae37598ad998799",
        "type": "comment",
        "z": "b15f08f24ad93a57",
        "name": "Remove files",
        "info": "",
        "x": 110,
        "y": 80,
        "wires": []
    },
    {
        "id": "2274fda5051d6947",
        "type": "exec",
        "z": "b15f08f24ad93a57",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Remove ALL file in folder",
        "x": 450,
        "y": 140,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "e5fb69f25443bae8",
        "type": "function",
        "z": "b15f08f24ad93a57",
        "name": "set folder to delete",
        "func": "let folder = env.get('DIRECTORY');\n\n(folder)\n  ? msg.payload = `rm ${folder}/*`\n  : new Error('Directory not set');\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 140,
        "wires": [
            [
                "2274fda5051d6947"
            ]
        ]
    },
    {
        "id": "86baacc22ae23adf",
        "type": "function",
        "z": "6856ac1d2d8fe5fa",
        "name": "set msg.(azione cmd)",
        "func": "\n\nvar commandValue = msg.cmd.v;\nvar arr = msg.cmd.v.split(\"|\");\nif (arr[0] == \"0\"){\n    msg.azione = 0;\n}else{\n    msg.azione = 1;\n    msg.cmd = arr[1];\n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 160,
        "wires": [
            [
                "99435b4603b22832"
            ]
        ]
    },
    {
        "id": "99435b4603b22832",
        "type": "switch",
        "z": "6856ac1d2d8fe5fa",
        "name": "msg.azione",
        "property": "azione",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 130,
        "y": 320,
        "wires": [
            [
                "b1e8e6d278e54217"
            ],
            [
                "5f40f3e32b078a75"
            ]
        ]
    },
    {
        "id": "b1e8e6d278e54217",
        "type": "switch",
        "z": "6856ac1d2d8fe5fa",
        "name": "msg.cmd",
        "property": "cmd",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ALL",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 260,
        "y": 260,
        "wires": [
            [
                "d1e4011337da1c43"
            ],
            [
                "992625bea589a61b"
            ]
        ]
    },
    {
        "id": "5f40f3e32b078a75",
        "type": "function",
        "z": "6856ac1d2d8fe5fa",
        "name": "set msg.topic",
        "func": "msg.topic = \"UPDATE sistema set VIDEO='0', LAST='null'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 420,
        "wires": [
            [
                "6afc257fc2474105"
            ]
        ]
    },
    {
        "id": "d1e4011337da1c43",
        "type": "function",
        "z": "6856ac1d2d8fe5fa",
        "name": "set msg.topic",
        "func": "msg.topic = \"UPDATE sistema set VIDEO='\" + msg.cmd + \"', WEB='0', PLIST='0', PDF='0', IMAGE='0', LAST='VIDEO|\" + msg.cmd + \"'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 220,
        "wires": [
            [
                "1eb893c26febba91"
            ]
        ]
    },
    {
        "id": "992625bea589a61b",
        "type": "fs-ops-access",
        "z": "6856ac1d2d8fe5fa",
        "name": "Read /home/pi/Video/msg.cmd",
        "path": "/home/pi/Video",
        "pathType": "str",
        "filename": "cmd",
        "filenameType": "msg",
        "read": true,
        "write": false,
        "throwerror": false,
        "x": 470,
        "y": 300,
        "wires": [
            [
                "a4c578986f0398a8"
            ],
            []
        ]
    },
    {
        "id": "6afc257fc2474105",
        "type": "sqlite",
        "z": "6856ac1d2d8fe5fa",
        "mydb": "8ed184d0cab7976b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Store msg.topic on DB",
        "x": 500,
        "y": 420,
        "wires": [
            [
                "bf60474bf035c2d8"
            ]
        ]
    },
    {
        "id": "1eb893c26febba91",
        "type": "sqlite",
        "z": "6856ac1d2d8fe5fa",
        "mydb": "8ed184d0cab7976b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Store msg.topic on DB",
        "x": 620,
        "y": 220,
        "wires": [
            [
                "552ee708e828f3eb"
            ]
        ]
    },
    {
        "id": "a4c578986f0398a8",
        "type": "function",
        "z": "6856ac1d2d8fe5fa",
        "name": "set msg.topic",
        "func": "msg.topic = \"UPDATE sistema SET VIDEO='\" + msg.cmd + \"', WEB='0', PLIST='0',IMAGE='0', LAST='VIDEO|\" + msg.cmd + \"'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 280,
        "wires": [
            [
                "4d2b56ae0d69911b"
            ]
        ]
    },
    {
        "id": "bf60474bf035c2d8",
        "type": "exec",
        "z": "6856ac1d2d8fe5fa",
        "command": "pkill -o vlc",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Kill vlc",
        "x": 690,
        "y": 420,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "552ee708e828f3eb",
        "type": "exec",
        "z": "6856ac1d2d8fe5fa",
        "command": "pkill -o chromium ; pkill -o pqiv ; pkill -o vlc",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Kill ALL",
        "x": 820,
        "y": 220,
        "wires": [
            [
                "5450f518d4ea9293"
            ],
            [],
            []
        ]
    },
    {
        "id": "4d2b56ae0d69911b",
        "type": "sqlite",
        "z": "6856ac1d2d8fe5fa",
        "mydb": "8ed184d0cab7976b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Store msg.topic on DB",
        "x": 940,
        "y": 280,
        "wires": [
            [
                "1d067f891154a4ef"
            ]
        ]
    },
    {
        "id": "5450f518d4ea9293",
        "type": "fs-file-lister",
        "z": "6856ac1d2d8fe5fa",
        "name": "Listener /home/pi/Video/",
        "start": "/home/pi/Video/",
        "pattern": "*.mp4",
        "folders": "*",
        "hidden": false,
        "lstype": "files",
        "path": true,
        "single": true,
        "depth": 0,
        "stat": false,
        "showWarnings": false,
        "x": 1030,
        "y": 180,
        "wires": [
            [
                "04c1b97079045c88"
            ]
        ]
    },
    {
        "id": "1d067f891154a4ef",
        "type": "exec",
        "z": "6856ac1d2d8fe5fa",
        "command": "pkill -o chromium ; pkill -o pqiv ; pkill -o vlc",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Kill ALL",
        "x": 1140,
        "y": 280,
        "wires": [
            [
                "2aa18c828b0ca5f8"
            ],
            [],
            []
        ]
    },
    {
        "id": "04c1b97079045c88",
        "type": "function",
        "z": "6856ac1d2d8fe5fa",
        "name": "set msg.(procedi listvideo)",
        "func": "var str = '';\nmsg.procedi = true;\nif(msg.payload.length > 0){\n    for(var x = 0;x<msg.payload.length;x++){\n        if(x < msg.payload.length - 1){\n            str = str + msg.payload[x] + \" \";\n        }else{\n            str = str + msg.payload[x]\n        }\n    }\n    msg.listvideo = str;\n}else{\n    msg.procedi = false;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 180,
        "wires": [
            [
                "6bcae9b11288fe3e"
            ]
        ]
    },
    {
        "id": "2aa18c828b0ca5f8",
        "type": "function",
        "z": "6856ac1d2d8fe5fa",
        "name": "set msg.payload",
        "func": "msg.payload = env.get('DIRECTORY') + msg.cmd;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 260,
        "wires": [
            [
                "32ee6fe46feb6180"
            ]
        ]
    },
    {
        "id": "9b984ed81a8f64a7",
        "type": "comment",
        "z": "6856ac1d2d8fe5fa",
        "name": "Local Video",
        "info": "",
        "x": 110,
        "y": 100,
        "wires": []
    },
    {
        "id": "6bcae9b11288fe3e",
        "type": "switch",
        "z": "6856ac1d2d8fe5fa",
        "name": "msg.procedi",
        "property": "procedi",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1510,
        "y": 180,
        "wires": [
            [
                "b9726f302d3209d5"
            ],
            [
                "a46350c8e32db5bb"
            ]
        ]
    },
    {
        "id": "b9726f302d3209d5",
        "type": "function",
        "z": "6856ac1d2d8fe5fa",
        "name": "set msg.payload",
        "func": "msg.payload = msg.listvideo;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1700,
        "y": 140,
        "wires": [
            [
                "764d7148c03a0281"
            ]
        ]
    },
    {
        "id": "a46350c8e32db5bb",
        "type": "function",
        "z": "6856ac1d2d8fe5fa",
        "name": "set msg.topic",
        "func": "msg.topic = \"UPDATE sistema SET VIDEO='0', LAST='null'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1690,
        "y": 200,
        "wires": [
            [
                "5add050ae35f9e78"
            ]
        ]
    },
    {
        "id": "32ee6fe46feb6180",
        "type": "exec",
        "z": "6856ac1d2d8fe5fa",
        "command": "export DISPLAY=:0.0 && cvlc --fullscreen --loop ",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Play Loop msg.payload",
        "x": 1550,
        "y": 260,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "5add050ae35f9e78",
        "type": "sqlite",
        "z": "6856ac1d2d8fe5fa",
        "mydb": "8ed184d0cab7976b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Store msg.topic on DB",
        "x": 1900,
        "y": 200,
        "wires": [
            [
                "fa8de5da18b07bf4"
            ]
        ]
    },
    {
        "id": "764d7148c03a0281",
        "type": "exec",
        "z": "6856ac1d2d8fe5fa",
        "command": "export DISPLAY=:0.0 && cvlc --fullscreen --loop ",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Play Loop msg.payload",
        "x": 1930,
        "y": 140,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "fa8de5da18b07bf4",
        "type": "exec",
        "z": "6856ac1d2d8fe5fa",
        "command": "pkill -o chromium ; pkill -o pqiv ; pkill -o vlc",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Kill ALL",
        "x": 2120,
        "y": 200,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "ab76f4aaa1179d43",
        "type": "function",
        "z": "6856ac1d2d8fe5fa",
        "name": "set msg(azione cmd)",
        "func": "/* Il comando deve essere in formato: \n    1|<fileVideo>\n    oppure\n    1|ALL\n*/\n\nlet commandValue = msg.cmd.v;\nlet arr = msg.cmd.v.split(\"|\");\n\n// Parametro di disattivazione comando\nif (arr[0] == \"0\"){\n    msg.azione = 0;\n} else {\n    // Parametro di attivazione comando\n    msg.azione = 1;\n    msg.cmd = arr[1];\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 520,
        "wires": [
            [
                "c1f08fa7b1550380"
            ]
        ]
    },
    {
        "id": "c1f08fa7b1550380",
        "type": "switch",
        "z": "6856ac1d2d8fe5fa",
        "name": "msg.azione",
        "property": "azione",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 130,
        "y": 640,
        "wires": [
            [
                "b1e079aeed329bbd"
            ],
            [
                "f5df7eede1b4ca2d"
            ]
        ]
    },
    {
        "id": "b1e079aeed329bbd",
        "type": "function",
        "z": "6856ac1d2d8fe5fa",
        "name": "set msg.topic",
        "func": "msg.topic = \"UPDATE sistema set VIDEO='\" + msg.cmd + \"', WEB='0', PLIST='0', PDF='0', IMAGE='0', LAST='VIDEO|\" + msg.cmd + \"'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 620,
        "wires": [
            [
                "0f22e38f95631e3a"
            ]
        ]
    },
    {
        "id": "f5df7eede1b4ca2d",
        "type": "function",
        "z": "6856ac1d2d8fe5fa",
        "name": "set msg.topic",
        "func": "msg.topic = \"UPDATE sistema set VIDEO='0', LAST='null'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 680,
        "wires": [
            [
                "440336db977770d4"
            ]
        ]
    },
    {
        "id": "0f22e38f95631e3a",
        "type": "sqlite",
        "z": "6856ac1d2d8fe5fa",
        "mydb": "8ed184d0cab7976b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Store msg.topic on DB",
        "x": 520,
        "y": 620,
        "wires": [
            [
                "0da2b6a02f40a27b"
            ]
        ]
    },
    {
        "id": "440336db977770d4",
        "type": "sqlite",
        "z": "6856ac1d2d8fe5fa",
        "mydb": "8ed184d0cab7976b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Store msg.topic on DB",
        "x": 520,
        "y": 680,
        "wires": [
            [
                "f37f71090e81b986"
            ]
        ]
    },
    {
        "id": "d63dd5046505233d",
        "type": "switch",
        "z": "6856ac1d2d8fe5fa",
        "name": "Se comando è ALL",
        "property": "cmd",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ALL",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 910,
        "y": 600,
        "wires": [
            [
                "dc00ee76a798671f"
            ],
            [
                "cdca853a4a9f20ea"
            ]
        ]
    },
    {
        "id": "dc00ee76a798671f",
        "type": "fs-file-lister",
        "z": "6856ac1d2d8fe5fa",
        "name": "Listener /home/pi/Video/",
        "start": "/home/pi/Video/",
        "pattern": "*.mp4",
        "folders": "*",
        "hidden": false,
        "lstype": "files",
        "path": true,
        "single": true,
        "depth": 0,
        "stat": false,
        "showWarnings": false,
        "x": 1170,
        "y": 560,
        "wires": [
            [
                "25047ead02a15f1d"
            ]
        ]
    },
    {
        "id": "d020b82225e89546",
        "type": "function",
        "z": "6856ac1d2d8fe5fa",
        "name": "Create list video string",
        "func": "msg.payload = msg.payload.join(' ');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1640,
        "y": 580,
        "wires": [
            [
                "e1c0ed71661efa5a"
            ]
        ]
    },
    {
        "id": "25047ead02a15f1d",
        "type": "switch",
        "z": "6856ac1d2d8fe5fa",
        "name": "Se presenti video",
        "property": "$count(payload)",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "else"
            },
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1410,
        "y": 560,
        "wires": [
            [
                "c24fca168ae22544"
            ],
            [
                "d020b82225e89546"
            ]
        ]
    },
    {
        "id": "e1c0ed71661efa5a",
        "type": "exec",
        "z": "6856ac1d2d8fe5fa",
        "command": "export DISPLAY=:0.0 && cvlc --fullscreen --loop --avcodec-hw=none",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Play Loop msg.payload",
        "x": 1910,
        "y": 620,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "c24fca168ae22544",
        "type": "function",
        "z": "6856ac1d2d8fe5fa",
        "name": "set msg.topic",
        "func": "msg.topic = \"UPDATE sistema SET VIDEO='0', LAST='null'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 520,
        "wires": [
            [
                "53b5ec1889264520"
            ]
        ]
    },
    {
        "id": "53b5ec1889264520",
        "type": "sqlite",
        "z": "6856ac1d2d8fe5fa",
        "mydb": "8ed184d0cab7976b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Store msg.topic on DB",
        "x": 1840,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "cdca853a4a9f20ea",
        "type": "function",
        "z": "6856ac1d2d8fe5fa",
        "name": "set video path msg.payload",
        "func": "msg.payload = env.get('DIRECTORY') + `\"${msg.cmd}\"`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 620,
        "wires": [
            [
                "e1c0ed71661efa5a"
            ]
        ]
    },
    {
        "id": "0da2b6a02f40a27b",
        "type": "subflow:34f1ece98c9c013c",
        "z": "6856ac1d2d8fe5fa",
        "name": "",
        "x": 720,
        "y": 600,
        "wires": [
            [
                "d63dd5046505233d"
            ]
        ]
    },
    {
        "id": "f37f71090e81b986",
        "type": "subflow:34f1ece98c9c013c",
        "z": "6856ac1d2d8fe5fa",
        "name": "",
        "x": 1040,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "65e56fa72cc28f1f",
        "type": "comment",
        "z": "cb65bb54dc1318d0",
        "name": "PDF",
        "info": "",
        "x": 90,
        "y": 60,
        "wires": []
    },
    {
        "id": "ac27a014c495b646",
        "type": "function",
        "z": "cb65bb54dc1318d0",
        "name": "set msg(azione interval cmd)",
        "func": "/* Il comando deve essere in formato: \n    1|ALL|10\n    \n    Nel caso venga fornito solo come:\n    1|ALL\n    viene impostato in automatico un refresh di 10.\n*/\n\nlet commandValue = msg.cmd.v;\nlet arr = msg.cmd.v.split(\"|\");\n\n// Parametro di disattivazione comando\nif (arr[0] == \"0\"){\n    msg.azione = 0;\n} else {\n    // Parametro di attivazione comando\n    msg.azione = 1;\n    msg.cmd = arr[1];\n    \n    arr.length === 2 \n    ? msg.interval = arr[2]\n    : msg.interval = 10;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 120,
        "wires": [
            [
                "0f2c736d67ad11e9"
            ]
        ]
    },
    {
        "id": "0f2c736d67ad11e9",
        "type": "switch",
        "z": "cb65bb54dc1318d0",
        "name": "msg.azione",
        "property": "azione",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 150,
        "y": 240,
        "wires": [
            [
                "18a0cc86898fc7d4"
            ],
            [
                "73ead04cd368499c"
            ]
        ]
    },
    {
        "id": "18a0cc86898fc7d4",
        "type": "function",
        "z": "cb65bb54dc1318d0",
        "name": "set msg.topic",
        "func": "msg.topic = \"UPDATE sistema set PDF='\" + msg.cmd + \"', WEB='0', PLIST='0', IMAGE='0', VIDEO='0', LAST='PDF|\" + msg.cmd + \"|\" + msg.interval + \"'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 220,
        "wires": [
            [
                "6306f4e06245f970"
            ]
        ]
    },
    {
        "id": "73ead04cd368499c",
        "type": "function",
        "z": "cb65bb54dc1318d0",
        "name": "set msg.topic",
        "func": "msg.topic = \"UPDATE sistema set PDF='0', LAST='null'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 280,
        "wires": [
            [
                "e496eb5debf94e11"
            ]
        ]
    },
    {
        "id": "6306f4e06245f970",
        "type": "sqlite",
        "z": "cb65bb54dc1318d0",
        "mydb": "8ed184d0cab7976b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Store msg.topic on DB",
        "x": 540,
        "y": 220,
        "wires": [
            [
                "6d26c4b65c998348"
            ]
        ]
    },
    {
        "id": "e496eb5debf94e11",
        "type": "sqlite",
        "z": "cb65bb54dc1318d0",
        "mydb": "8ed184d0cab7976b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Store msg.topic on DB",
        "x": 540,
        "y": 280,
        "wires": [
            [
                "82f1cc7ca3a479b4"
            ]
        ]
    },
    {
        "id": "5ac2cc9490ac49dd",
        "type": "function",
        "z": "cb65bb54dc1318d0",
        "name": "set msg.payload",
        "func": "msg.cmd !== \"ALL\"\n    ? msg.payload = env.get(\"DIRECTORY\") + `\"${msg.cmd}\"` + \" -d \" + msg.interval\n    : msg.payload = env.get(\"DIRECTORY\") + \" -d \" + msg.interval;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 200,
        "wires": [
            [
                "c23b3c3ee7467ca0"
            ]
        ]
    },
    {
        "id": "c23b3c3ee7467ca0",
        "type": "exec",
        "z": "cb65bb54dc1318d0",
        "command": "export DISPLAY=:0.0 && pqiv -f -i -t -s ",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "See pdf msg.payload",
        "x": 1160,
        "y": 200,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "6d26c4b65c998348",
        "type": "subflow:34f1ece98c9c013c",
        "z": "cb65bb54dc1318d0",
        "name": "",
        "x": 760,
        "y": 200,
        "wires": [
            [
                "5ac2cc9490ac49dd"
            ]
        ]
    },
    {
        "id": "82f1cc7ca3a479b4",
        "type": "subflow:34f1ece98c9c013c",
        "z": "cb65bb54dc1318d0",
        "name": "",
        "x": 760,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "91c46eada2692834",
        "type": "comment",
        "z": "a9121f18e06a6127",
        "name": "Images",
        "info": "",
        "x": 90,
        "y": 40,
        "wires": []
    },
    {
        "id": "0475562084540c41",
        "type": "function",
        "z": "a9121f18e06a6127",
        "name": "set msg.(azione interval cmd)",
        "func": "/* Il comando deve essere in formato: \n    1|ALL|10\n    \n    Nel caso venga fornito solo come:\n    1|ALL\n    viene impostato in automatico un refresh di 10.\n*/\n\nlet commandValue = msg.cmd.v;\nlet arr = msg.cmd.v.split(\"|\");\n\n// Parametro di disattivazione comando\nif (arr[0] == \"0\"){\n    msg.azione = 0;\n} else {\n    // Parametro di attivazione comando\n    \n    if(arr.length === 2){\n        msg.azione = 1;\n        msg.cmd = arr[1];\n        msg.interval = arr[2];\n    }else {\n        msg.azione = 1;\n        msg.cmd = arr[1];   \n        msg.interval = 10;\n    }\n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 100,
        "wires": [
            [
                "f51963fc337372e0"
            ]
        ]
    },
    {
        "id": "f51963fc337372e0",
        "type": "switch",
        "z": "a9121f18e06a6127",
        "name": "msg.azione",
        "property": "azione",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 130,
        "y": 240,
        "wires": [
            [
                "b1b8fdce2ce62f63"
            ],
            [
                "72a117feab5710a4"
            ]
        ]
    },
    {
        "id": "b1b8fdce2ce62f63",
        "type": "switch",
        "z": "a9121f18e06a6127",
        "name": "msg.cmd",
        "property": "cmd",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ALL",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 300,
        "y": 200,
        "wires": [
            [
                "ba6a7c19aa1ea609"
            ],
            [
                "3ca42893ab4dc6b0"
            ]
        ]
    },
    {
        "id": "72a117feab5710a4",
        "type": "function",
        "z": "a9121f18e06a6127",
        "name": "set msg.topic",
        "func": "msg.topic = \"UPDATE sistema set IMAGE='0', LAST='null'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 320,
        "wires": [
            [
                "12f8271688771dab"
            ]
        ]
    },
    {
        "id": "3ca42893ab4dc6b0",
        "type": "fs-ops-access",
        "z": "a9121f18e06a6127",
        "name": "Read /home/pi/Immagini/msg.cmd",
        "path": "/home/pi/Immagini",
        "pathType": "str",
        "filename": "cmd",
        "filenameType": "msg",
        "read": true,
        "write": false,
        "throwerror": false,
        "x": 540,
        "y": 240,
        "wires": [
            [
                "9a6ad18b77e32115"
            ],
            []
        ]
    },
    {
        "id": "12f8271688771dab",
        "type": "sqlite",
        "z": "a9121f18e06a6127",
        "mydb": "8ed184d0cab7976b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Store msg.topic on DB",
        "x": 540,
        "y": 320,
        "wires": [
            [
                "860c683fb4d315a2"
            ]
        ]
    },
    {
        "id": "ba6a7c19aa1ea609",
        "type": "function",
        "z": "a9121f18e06a6127",
        "name": "set msg.topic",
        "func": "msg.topic = \"UPDATE sistema set IMAGE='\" + msg.cmd + \"', WEB='0', PLIST='0', PDF='0',VIDEO='0', LAST='IMAGE|\" + msg.cmd + \"|\" + msg.interval + \"'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 160,
        "wires": [
            [
                "dbdde3a7ecf5395c"
            ]
        ]
    },
    {
        "id": "dbdde3a7ecf5395c",
        "type": "sqlite",
        "z": "a9121f18e06a6127",
        "mydb": "8ed184d0cab7976b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Store msg.topic on DB",
        "x": 680,
        "y": 160,
        "wires": [
            [
                "d542940886479a02"
            ]
        ]
    },
    {
        "id": "9a6ad18b77e32115",
        "type": "function",
        "z": "a9121f18e06a6127",
        "name": "set msg.topic",
        "func": "msg.topic = \"UPDATE sistema SET IMAGE='\" + msg.cmd + \"', WEB='0', PLIST='0', LAST='IMAGE|\" + msg.cmd + \"'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 220,
        "wires": [
            [
                "3005fc44510fd598"
            ]
        ]
    },
    {
        "id": "860c683fb4d315a2",
        "type": "exec",
        "z": "a9121f18e06a6127",
        "command": "pkill -o pqiv",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Kill qpiv",
        "x": 740,
        "y": 320,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "3005fc44510fd598",
        "type": "sqlite",
        "z": "a9121f18e06a6127",
        "mydb": "8ed184d0cab7976b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Store msg.topic on DB",
        "x": 1000,
        "y": 220,
        "wires": [
            [
                "48d9ae82e14a8491"
            ]
        ]
    },
    {
        "id": "d542940886479a02",
        "type": "exec",
        "z": "a9121f18e06a6127",
        "command": "pkill -o chromium ; pkill -o pqiv ; pkill -o vlc",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Chiudi tutto",
        "x": 890,
        "y": 160,
        "wires": [
            [
                "ee4d593d17716105"
            ],
            [],
            []
        ]
    },
    {
        "id": "ee4d593d17716105",
        "type": "function",
        "z": "a9121f18e06a6127",
        "name": "set command",
        "func": "const imageFolder = env.get('DIRECTORY');\nconst msgInterval = msg.interval;\nconst command = `export DISPLAY=:0.0 && pqiv -f -i -t -s --browse ${imageFolder} -d ${msgInterval}`\n//msg.payload = \"-d \" + msg.interval;\n\nmsg.payload = command;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 140,
        "wires": [
            [
                "04f725c6c38e2678"
            ]
        ]
    },
    {
        "id": "48d9ae82e14a8491",
        "type": "exec",
        "z": "a9121f18e06a6127",
        "command": "pkill -o chromium ; pkill -o pqiv ; pkill -o vlc",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Chiudi tutto",
        "x": 1210,
        "y": 220,
        "wires": [
            [
                "73b6ee4adbbb6e0e"
            ],
            [],
            []
        ]
    },
    {
        "id": "73b6ee4adbbb6e0e",
        "type": "function",
        "z": "a9121f18e06a6127",
        "name": "set command",
        "func": "const imageFolder = env.get('DIRECTORY')\n\nconst command = `export DISPLAY=:0.0 && pqiv -f -i -t ${imageFolder} ${msg.cmd}`\n//msg.payload =  + msg.cmd;\n\nmsg.payload = command;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 200,
        "wires": [
            [
                "cc38e2155a708acd"
            ]
        ]
    },
    {
        "id": "04f725c6c38e2678",
        "type": "exec",
        "z": "a9121f18e06a6127",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "See ALL in DIRECTORY",
        "x": 1310,
        "y": 140,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "cc38e2155a708acd",
        "type": "exec",
        "z": "a9121f18e06a6127",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "See specific image in DIRECTORY",
        "x": 1660,
        "y": 200,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "85874916159f882b",
        "type": "function",
        "z": "a9121f18e06a6127",
        "name": "set msg(azione interval cmd)",
        "func": "/* Il comando deve essere in formato: \n    1|ALL|10\n    \n    Nel caso venga fornito solo come:\n    1|ALL\n    viene impostato in automatico un refresh di 10.\n*/\n\nlet commandValue = msg.cmd.v;\nlet arr = msg.cmd.v.split(\"|\");\n\n// Parametro di disattivazione comando\nif (arr[0] == \"0\"){\n    msg.azione = 0;\n} else {\n    // Parametro di attivazione comando\n    msg.azione = 1;\n    msg.cmd = arr[1];\n    \n    arr.length === 2 \n    ? msg.interval = arr[2]\n    : msg.interval = 10;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 440,
        "wires": [
            [
                "54693abc61dc0834"
            ]
        ]
    },
    {
        "id": "0ae92d365e35c257",
        "type": "function",
        "z": "a9121f18e06a6127",
        "name": "set msg.topic",
        "func": "msg.topic = \"UPDATE sistema set IMAGE='\" + msg.cmd + \"', WEB='0', PLIST='0', PDF='0',VIDEO='0', LAST='IMAGE|\" + msg.cmd + \"|\" + msg.interval + \"'\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 540,
        "wires": [
            [
                "27583931d57c42ff"
            ]
        ]
    },
    {
        "id": "a38fe69ef7cbb1f2",
        "type": "function",
        "z": "a9121f18e06a6127",
        "name": "set msg.topic",
        "func": "msg.topic = \"UPDATE sistema set IMAGE='0', LAST='null'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 600,
        "wires": [
            [
                "b2cdbbf010b7792d"
            ]
        ]
    },
    {
        "id": "aeeea2d715d77fa7",
        "type": "function",
        "z": "a9121f18e06a6127",
        "name": "set msg.payload",
        "func": "\nmsg.cmd !== \"ALL\"\n    ? msg.payload = env.get(\"DIRECTORY\") + `\"${msg.cmd}\"` + \" -d \" + msg.interval\n    : msg.payload = \" --browse \" + env.get(\"DIRECTORY\") + \" -d \" + msg.interval;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 520,
        "wires": [
            [
                "d653d7bcd69958bd"
            ]
        ]
    },
    {
        "id": "54693abc61dc0834",
        "type": "switch",
        "z": "a9121f18e06a6127",
        "name": "msg.azione",
        "property": "azione",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 130,
        "y": 560,
        "wires": [
            [
                "0ae92d365e35c257"
            ],
            [
                "a38fe69ef7cbb1f2"
            ]
        ]
    },
    {
        "id": "b2cdbbf010b7792d",
        "type": "sqlite",
        "z": "a9121f18e06a6127",
        "mydb": "8ed184d0cab7976b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Store msg.topic on DB",
        "x": 520,
        "y": 600,
        "wires": [
            [
                "08973a77a851ca3d"
            ]
        ]
    },
    {
        "id": "d653d7bcd69958bd",
        "type": "exec",
        "z": "a9121f18e06a6127",
        "command": "export DISPLAY=:0.0 && pqiv -f -i -t -s ",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "See pdf msg.payload",
        "x": 1160,
        "y": 520,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "27583931d57c42ff",
        "type": "sqlite",
        "z": "a9121f18e06a6127",
        "mydb": "8ed184d0cab7976b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Store msg.topic on DB",
        "x": 520,
        "y": 540,
        "wires": [
            [
                "ee0c7c86f4f808ec"
            ]
        ]
    },
    {
        "id": "ee0c7c86f4f808ec",
        "type": "subflow:34f1ece98c9c013c",
        "z": "a9121f18e06a6127",
        "name": "",
        "x": 740,
        "y": 520,
        "wires": [
            [
                "aeeea2d715d77fa7"
            ]
        ]
    },
    {
        "id": "08973a77a851ca3d",
        "type": "subflow:34f1ece98c9c013c",
        "z": "a9121f18e06a6127",
        "name": "",
        "x": 740,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "b45f901d9e2f6b08",
        "type": "comment",
        "z": "190388cf4d3f5366",
        "name": "Playlist Youtube",
        "info": "",
        "x": 120,
        "y": 40,
        "wires": []
    },
    {
        "id": "f08531d00d6b9055",
        "type": "function",
        "z": "190388cf4d3f5366",
        "name": "Set msg.topic & msg.tipo",
        "func": "let splittedValue = msg.cmd.v.split('|');\nlet tipo = splittedValue[0];\nlet value = splittedValue[1];\n\n(tipo === '0')\n    ? msg.topic = \"UPDATE sistema set PLIST='0', LAST='null'\"\n    : msg.topic = \"UPDATE sistema set PLIST='\" + tipo + \"', WEB='0', IMAGE='0', PDF='0',VIDEO='0', LAST='PLIST|\" + value + \"'\";\n\nmsg.tipo = tipo;\nmsg.valore = value;\nmsg.payload = tipo;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 100,
        "wires": [
            [
                "ec8753c1e00a9e4c"
            ]
        ]
    },
    {
        "id": "ec8753c1e00a9e4c",
        "type": "sqlite",
        "z": "190388cf4d3f5366",
        "mydb": "8ed184d0cab7976b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Store msg.topic on DB",
        "x": 480,
        "y": 100,
        "wires": [
            [
                "4c6a3a234c31cc85"
            ]
        ]
    },
    {
        "id": "5e2914e12a47ed74",
        "type": "switch",
        "z": "190388cf4d3f5366",
        "name": "msg.tipo",
        "property": "tipo",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 160,
        "y": 180,
        "wires": [
            [
                "50554841c8ff5266"
            ]
        ]
    },
    {
        "id": "50554841c8ff5266",
        "type": "function",
        "z": "190388cf4d3f5366",
        "name": "set msg.payload with URL",
        "func": "msg.payload = \"\\\"\" + msg.valore + \"\\\"\";\nlet arr = msg.valore.split(\"=\");\nlet p1 = \"https://www.youtube.com/embed/videoseries?controls=0&amp;autoplay=1&amp;mute=1&amp;loop=1&amp;list=\";\nlet p2 = arr[1];\nlet url = \"\\\"\" + p1.trim() + p2.trim() + \"\\\"\";\n\nmsg.payload = url;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 180,
        "wires": [
            [
                "76e1d5ce1897ecdd"
            ]
        ]
    },
    {
        "id": "76e1d5ce1897ecdd",
        "type": "exec",
        "z": "190388cf4d3f5366",
        "command": "export DISPLAY=:0.0 && sh kiosk.sh ",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "kiosk.sh + msg.payload",
        "x": 670,
        "y": 180,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "4c6a3a234c31cc85",
        "type": "subflow:34f1ece98c9c013c",
        "z": "190388cf4d3f5366",
        "name": "",
        "x": 700,
        "y": 100,
        "wires": [
            [
                "5e2914e12a47ed74"
            ]
        ]
    },
    {
        "id": "dd77c58981a746b6",
        "type": "comment",
        "z": "f51b1854e03d3293",
        "name": "Web kiosk",
        "info": "",
        "x": 100,
        "y": 40,
        "wires": []
    },
    {
        "id": "c742c036bde6129f",
        "type": "function",
        "z": "f51b1854e03d3293",
        "name": "Set msg.topic & msg.tipo",
        "func": "const splittedValue = msg.cmd.v.split('|');\nlet tipo = '0';\nlet value = \"\";\nlet reloadBrowser = '0';\n\nswitch(splittedValue.length){\n    case 1: {\n        tipo = splittedValue[0];\n        break;\n    }\n    case 2: {\n        tipo = splittedValue[0];\n        value = splittedValue[1];\n        break;\n    }\n    case 3: {\n        tipo = splittedValue[0];\n        value = splittedValue[1];\n        reloadBrowser = splittedValue[2];        \n        break;\n    }\n}\n\n(tipo === '0')\n  ? msg.topic = \"UPDATE sistema set WEB='0', LAST='null'\"\n  : msg.topic = `UPDATE sistema set WEB='${tipo}',PLIST='0', IMAGE='0', PDF='0',VIDEO='0', LAST='WEB|${value}|${reloadBrowser}'`;\n\nmsg.tipo = tipo;\nmsg.valore = value;\nmsg.reloadBrowser = reloadBrowser;\nmsg.payload = tipo;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 180,
        "wires": [
            [
                "42151dddec6f06d9",
                "df49be91796d93b1"
            ]
        ]
    },
    {
        "id": "42151dddec6f06d9",
        "type": "sqlite",
        "z": "f51b1854e03d3293",
        "mydb": "8ed184d0cab7976b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Store msg.topic on DB",
        "x": 440,
        "y": 180,
        "wires": [
            [
                "a4bed1f7ba72f416"
            ]
        ]
    },
    {
        "id": "ab9c659c3f3be5ea",
        "type": "switch",
        "z": "f51b1854e03d3293",
        "name": "msg.tipo",
        "property": "tipo",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 120,
        "y": 300,
        "wires": [
            [
                "755eeb384f9cbaca"
            ]
        ]
    },
    {
        "id": "755eeb384f9cbaca",
        "type": "function",
        "z": "f51b1854e03d3293",
        "name": "set msg.paylod string",
        "func": "msg.payload = \"\\\"\" + msg.valore + \"\\\"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 300,
        "wires": [
            [
                "75bf83b5b4d5e0f6"
            ]
        ]
    },
    {
        "id": "4d2055384e949c8b",
        "type": "exec",
        "z": "f51b1854e03d3293",
        "command": "export DISPLAY=:0.0 && bash kiosk.sh ",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "kiosk.sh + msg.payload",
        "x": 770,
        "y": 340,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "df49be91796d93b1",
        "type": "debug",
        "z": "f51b1854e03d3293",
        "name": "Kiosk splitted",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 100,
        "wires": []
    },
    {
        "id": "a4bed1f7ba72f416",
        "type": "subflow:34f1ece98c9c013c",
        "z": "f51b1854e03d3293",
        "name": "",
        "x": 660,
        "y": 180,
        "wires": [
            [
                "ab9c659c3f3be5ea"
            ]
        ]
    },
    {
        "id": "75bf83b5b4d5e0f6",
        "type": "switch",
        "z": "f51b1854e03d3293",
        "name": "msg.reloadBrowser",
        "property": "reloadBrowser",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 530,
        "y": 300,
        "wires": [
            [
                "15b3a5c807f447ec"
            ],
            [
                "4d2055384e949c8b"
            ]
        ]
    },
    {
        "id": "15b3a5c807f447ec",
        "type": "exec",
        "z": "f51b1854e03d3293",
        "command": "bash kioskWithReload.sh ",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "kioskWithReload.sh + msg.payload",
        "x": 800,
        "y": 260,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "a347aa978054834f",
        "type": "comment",
        "z": "9c1c79b2f416c9fd",
        "name": "Reboot",
        "info": "",
        "x": 90,
        "y": 60,
        "wires": []
    },
    {
        "id": "153fdd5b3379dc85",
        "type": "exec",
        "z": "9c1c79b2f416c9fd",
        "command": "pkill -o chromium ; pkill -o pqiv ; pkill -o vlc",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Kill ALL",
        "x": 200,
        "y": 120,
        "wires": [
            [
                "092ba128516fa3cd"
            ],
            [],
            []
        ]
    },
    {
        "id": "092ba128516fa3cd",
        "type": "delay",
        "z": "9c1c79b2f416c9fd",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 360,
        "y": 120,
        "wires": [
            [
                "a2dc392c6dafaa78"
            ]
        ]
    },
    {
        "id": "a2dc392c6dafaa78",
        "type": "exec",
        "z": "9c1c79b2f416c9fd",
        "command": "sudo reboot",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 530,
        "y": 120,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "53d48bb39e86ca65",
        "type": "comment",
        "z": "a86c3d7dbe86dcbf",
        "name": "Stato monitor",
        "info": "",
        "x": 110,
        "y": 80,
        "wires": []
    },
    {
        "id": "debaa3553f4e4c68",
        "type": "switch",
        "z": "a86c3d7dbe86dcbf",
        "name": "msg.cmd.v",
        "property": "cmd.v",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 210,
        "y": 140,
        "wires": [
            [
                "44f03ab60ebfeaf7"
            ],
            [
                "6a74b412e81a2446"
            ]
        ]
    },
    {
        "id": "44f03ab60ebfeaf7",
        "type": "function",
        "z": "a86c3d7dbe86dcbf",
        "name": "Set msg.par & msg.topic",
        "func": "msg.topic = \"UPDATE sistema set MONITOR=1\";\nmsg.par = \"1\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 120,
        "wires": [
            [
                "3a97baa16c860d4f"
            ]
        ]
    },
    {
        "id": "6a74b412e81a2446",
        "type": "function",
        "z": "a86c3d7dbe86dcbf",
        "name": "Set msg.par & msg.topic",
        "func": "msg.topic = \"UPDATE sistema set MONITOR=0\";\nmsg.par = \"0\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 160,
        "wires": [
            [
                "3a97baa16c860d4f"
            ]
        ]
    },
    {
        "id": "3a97baa16c860d4f",
        "type": "sqlite",
        "z": "a86c3d7dbe86dcbf",
        "mydb": "8ed184d0cab7976b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Store msg.topic on DB",
        "x": 720,
        "y": 140,
        "wires": [
            [
                "7e6172e64b4f8d56"
            ]
        ]
    },
    {
        "id": "7e6172e64b4f8d56",
        "type": "exec",
        "z": "a86c3d7dbe86dcbf",
        "command": "export DISPLAY=:0 && vcgencmd display_power ",
        "addpay": "par",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Comando monitor",
        "x": 970,
        "y": 140,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "21dbc56221e2d3b0",
        "type": "comment",
        "z": "a86c3d7dbe86dcbf",
        "name": "REQUISITI",
        "info": "# Requisiti\nPer funzionare in \n`/boot/config.txt` \ndeve essere settata l'opzione:\n`dtoverlay=vc4-fkms-v3d`",
        "x": 100,
        "y": 40,
        "wires": []
    },
    {
        "id": "409016c9113bbc2b",
        "type": "switch",
        "z": "271e7f8f862c3b85",
        "name": "msg.cmd.v",
        "property": "cmd.v",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "DX",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SX",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "NORMAL",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 210,
        "y": 160,
        "wires": [
            [
                "ee9e2df456b13978"
            ],
            [
                "6cb9112ef8a25060"
            ],
            [
                "b9ce419e343ec53d"
            ]
        ]
    },
    {
        "id": "6cb9112ef8a25060",
        "type": "function",
        "z": "271e7f8f862c3b85",
        "name": "Set msg.senso & msg.topic",
        "func": "msg.senso = 'left';\nmsg.topic = `UPDATE sistema set ROTAZIONE=\"${msg.cmd.v}\"`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 160,
        "wires": [
            [
                "c85e5bf0d4100fbf"
            ]
        ]
    },
    {
        "id": "b9ce419e343ec53d",
        "type": "function",
        "z": "271e7f8f862c3b85",
        "name": "Set msg.senso & msg.topic",
        "func": "msg.senso = 'normal';\nmsg.topic = `UPDATE sistema set ROTAZIONE=\"${msg.cmd.v}\"`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 200,
        "wires": [
            [
                "c85e5bf0d4100fbf"
            ]
        ]
    },
    {
        "id": "ee9e2df456b13978",
        "type": "function",
        "z": "271e7f8f862c3b85",
        "name": "Set msg.senso & msg.topic",
        "func": "msg.senso = 'right';\nmsg.topic = `UPDATE sistema set ROTAZIONE=\"${msg.cmd.v}\"`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 120,
        "wires": [
            [
                "c85e5bf0d4100fbf"
            ]
        ]
    },
    {
        "id": "e8f3c5b01bfb24ce",
        "type": "comment",
        "z": "271e7f8f862c3b85",
        "name": "Rotazione schermo",
        "info": "",
        "x": 130,
        "y": 100,
        "wires": []
    },
    {
        "id": "c85e5bf0d4100fbf",
        "type": "sqlite",
        "z": "271e7f8f862c3b85",
        "mydb": "8ed184d0cab7976b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Store msg.topic on DB",
        "x": 780,
        "y": 160,
        "wires": [
            [
                "40c5559583602da0"
            ]
        ]
    },
    {
        "id": "40c5559583602da0",
        "type": "exec",
        "z": "271e7f8f862c3b85",
        "command": "export DISPLAY=:0 && xrandr --output HDMI-1 --rotate ",
        "addpay": "senso",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Comando di rotazione",
        "x": 1020,
        "y": 160,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "68b35ded16207bd7",
        "type": "comment",
        "z": "271e7f8f862c3b85",
        "name": "REQUISITI",
        "info": "# Requisiti\nPer funzionare in \n`/boot/config.txt` \ndeve essere settata l'opzione:\n`dtoverlay=vc4-fkms-v3d`",
        "x": 100,
        "y": 60,
        "wires": []
    },
    {
        "id": "9c03c2e70bcdc160",
        "type": "function",
        "z": "a0c114bc4ce3a7fa",
        "name": "Extract input & Fill msg.gdrive",
        "func": "\n/**\n * Messaggio deve essere del tipo\n * <sharedUrl>\n * ad esempio\n * https://drive.google.com/file/d/1zeuUShb_OMWJsvvq6CL4yYOdza8avZOf/view?usp=drive_link\n * https://drive.google.com/drive/folders/1q56QiMKW5d75ILOxkjYKFvFGWgYm9eoW?usp=sharing\n */\n\nconst gdriveUrl = msg.cmd.v;\nlet gdriveSpecficUrl;\n\n// Mi aspetto che sia così NEL CASO DI FILES:\n// https://drive.google.com/file/d/\n// Mi aspetto che sia così NEL CASO DI FOLDERS:\n// https://drive.google.com/drive/folders/\n\nconst gdriveLinkType = gdriveUrl.split('/').filter(item => item === \"folders\" || item === \"file\")\nconst gdriveId = gdriveUrl.split('/')[5].split('?')[0];\n\nif (gdriveLinkType.length !== 1 || gdriveId === \"undefined\"){\n    throw TypeError('Link inserito non valido!!');\n}\n\ngdriveSpecficUrl = gdriveUrl;\nif(gdriveLinkType[0] === \"file\"){\n\n    gdriveSpecficUrl = \"https://drive.google.com/uc?id=\".concat(gdriveId);\n}\n\nmsg.gdrive = {\n    \"id\" : gdriveId,\n    \"url\": gdriveSpecficUrl,\n    \"type\": gdriveLinkType\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 100,
        "wires": [
            [
                "eaf29b27f3f99481"
            ]
        ]
    },
    {
        "id": "9267200129740a7f",
        "type": "template",
        "z": "a0c114bc4ce3a7fa",
        "name": "Generate Script",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{{{payload}}}",
        "output": "str",
        "x": 460,
        "y": 220,
        "wires": [
            [
                "2d33f572623a68ae"
            ]
        ]
    },
    {
        "id": "5d91c1ce76819684",
        "type": "function",
        "z": "a0c114bc4ce3a7fa",
        "name": "Genero script File o Folder?",
        "func": "const requestType = msg.gdrive.type[0];\nconst downloadFolder = env.get(\"DownloadsPath\");\nconst imgFolder = env.get(\"ImagesPath\");\nconst vidFolder = env.get(\"VideosPath\");\nconst docFolder = env.get(\"DocsPath\");\nconst scriptName = \"download.sh\"\n\nif(downloadFolder === \"\" || typeof downloadFolder === \"undefined\"){\n    throw new Error(\"ENV DownloadsPath not set!\")\n}\nif(imgFolder === \"\" || typeof imgFolder === \"undefined\"){\n    throw new Error(\"ENV imgFolder not set!\")\n}\nif(vidFolder === \"\" || typeof vidFolder === \"undefined\"){\n    throw new Error(\"ENV vidFolder not set!\")\n}\nif(docFolder === \"\" || typeof docFolder === \"undefined\"){\n    throw new Error(\"ENV vidFolder not set!\")\n}\n\n// Recupero parent della downloadFolder\nconst temp = downloadFolder.split('/');\ntemp.pop();\nconst parentDownloadFolder = temp.join('/');\n\n// Prima di fare tutto cancello le cartelle di Immagini,Video,Documenti...\n// !!! Ad ogni richiesta di upload, cancello quello che avevo in precedenza\nconst scriptBase = `#!/bin/bash\nrm -r ${imgFolder}/*\nrm -r ${vidFolder}/*\nrm -r ${docFolder}/*\n`\n\nconst fileScript = scriptBase.concat(\n`rm -r ${downloadFolder}/*\ncd ${downloadFolder}\ngdown ${msg.gdrive.url}\n`);\n\nconst folderScript = scriptBase.concat(\n`rm -r ${downloadFolder}/*\ngdown ${msg.gdrive.url} -O ${downloadFolder} --folder\n`);\n\n// Set payload con script corretto\nswitch(requestType){\n    case \"file\": {\n        msg.payload = fileScript;       \n        break;\n    }\n    case \"folders\": {\n        msg.payload = folderScript;\n        break;\n    }\n}\n\n// Cartella su cui andare a creare lo script\nmsg.filename = `${parentDownloadFolder}/${scriptName}`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 220,
        "wires": [
            [
                "9267200129740a7f",
                "518fbd53650e8746"
            ]
        ]
    },
    {
        "id": "2d33f572623a68ae",
        "type": "file",
        "z": "a0c114bc4ce3a7fa",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 640,
        "y": 220,
        "wires": [
            [
                "c4d8e5b1e3327dbe"
            ]
        ]
    },
    {
        "id": "e9974438eb2536f5",
        "type": "exec",
        "z": "a0c114bc4ce3a7fa",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Exec script",
        "x": 1030,
        "y": 220,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "c4d8e5b1e3327dbe",
        "type": "function",
        "z": "a0c114bc4ce3a7fa",
        "name": "Create exec command",
        "func": "// Create command to execute script\nmsg.payload = `chmod +x ${msg.filename} && bash ${msg.filename}`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 220,
        "wires": [
            [
                "e9974438eb2536f5"
            ]
        ]
    },
    {
        "id": "518fbd53650e8746",
        "type": "debug",
        "z": "a0c114bc4ce3a7fa",
        "name": "UploadRequest",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 280,
        "wires": []
    },
    {
        "id": "2c35b189bab453c6",
        "type": "catch",
        "z": "a0c114bc4ce3a7fa",
        "name": "Check ENV",
        "scope": [
            "5d91c1ce76819684"
        ],
        "uncaught": false,
        "x": 510,
        "y": 440,
        "wires": [
            [
                "3832d8847c50ed3b"
            ]
        ]
    },
    {
        "id": "3832d8847c50ed3b",
        "type": "debug",
        "z": "a0c114bc4ce3a7fa",
        "name": "ERROR!!!",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 440,
        "wires": []
    },
    {
        "id": "eaf29b27f3f99481",
        "type": "function",
        "z": "a0c114bc4ce3a7fa",
        "g": "e7a23b733808ad59",
        "name": "Delete fileupload DB",
        "func": "// Cancello tutto il database ogni volta che viene\n// fatta una richiesta di upload\n\nmsg.topic = \"DELETE FROM fileupload\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 100,
        "wires": [
            [
                "b8b478fd1046e1da"
            ]
        ]
    },
    {
        "id": "b8b478fd1046e1da",
        "type": "sqlite",
        "z": "a0c114bc4ce3a7fa",
        "g": "e7a23b733808ad59",
        "mydb": "8ed184d0cab7976b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 770,
        "y": 100,
        "wires": [
            [
                "5d91c1ce76819684"
            ]
        ]
    },
    {
        "id": "8775ed3eb91bfcbf",
        "type": "exec",
        "z": "34f1ece98c9c013c",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Close ALL program",
        "x": 450,
        "y": 60,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "c5b07b9d5db44a58",
        "type": "function",
        "z": "34f1ece98c9c013c",
        "name": "Create command",
        "func": "const killCmd = \"pkill -o\";\n\n// Close Chromium (Kiosk and playlist reader)\nconst chromium = `${killCmd} chromium`;\n\n// Close reloadBrowserDaemon\n// TODO: variabile di sistema\nconst browserDeamon = `bash kioskWithReload.sh`\n\n// Close pqiv (image and PDF reader)\nconst pqiv = `${killCmd} pqiv`;\n\n// Close vlc (local video reader)\nconst vlc = `${killCmd} vlc`;\n\n// Ordine tra chromium e browserDaemon è importante\nlet cmds = [];\ncmds.push(pqiv);\ncmds.push(vlc);\ncmds.push(browserDeamon);\ncmds.push(chromium);\n\nmsg.payload = cmds.join(' ; ');\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 60,
        "wires": [
            [
                "f6590445272f3954",
                "8775ed3eb91bfcbf"
            ]
        ]
    },
    {
        "id": "f6590445272f3954",
        "type": "debug",
        "z": "34f1ece98c9c013c",
        "name": "Close ALL msg.payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 140,
        "wires": []
    },
    {
        "id": "9b89b27e20eb1936",
        "type": "change",
        "z": "ca0132a8264ea812",
        "name": "Modify Extension",
        "rules": [
            {
                "t": "set",
                "p": "file.ext",
                "pt": "msg",
                "to": "$substringAfter(file.ext, \".\")",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "file.ext",
                "pt": "msg",
                "to": "$lowercase(file.ext)\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 190,
        "y": 240,
        "wires": [
            [
                "4fced592b90adf1f"
            ]
        ]
    },
    {
        "id": "4fced592b90adf1f",
        "type": "switch",
        "z": "ca0132a8264ea812",
        "name": "Evt != delete",
        "property": "file.event",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "delete",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 390,
        "y": 240,
        "wires": [
            [
                "d71d96ab46b454dd"
            ]
        ]
    },
    {
        "id": "d71d96ab46b454dd",
        "type": "switch",
        "z": "ca0132a8264ea812",
        "name": "ZIP File?",
        "property": "file.ext",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "zip",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 560,
        "y": 240,
        "wires": [
            [
                "30383ca6d402e1c2",
                "80becc1ee5a351fe"
            ],
            [
                "680c6df6e4b09500",
                "4d8965cbc7016948",
                "2f8dc29356db656e",
                "91c9dd16d39467c2",
                "64c223dfad7ed1f6"
            ]
        ]
    },
    {
        "id": "49ea38fbe4ed475f",
        "type": "change",
        "z": "ca0132a8264ea812",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "DIRECTORY",
                "pt": "flow",
                "to": "ImagesPath",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 420,
        "wires": [
            [
                "6703fc7324814192"
            ]
        ]
    },
    {
        "id": "371601cac371c66e",
        "type": "change",
        "z": "ca0132a8264ea812",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "DIRECTORY",
                "pt": "flow",
                "to": "VideosPath",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 460,
        "wires": [
            [
                "6703fc7324814192"
            ]
        ]
    },
    {
        "id": "c8f337f33d336140",
        "type": "change",
        "z": "ca0132a8264ea812",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "DIRECTORY",
                "pt": "flow",
                "to": "DocsPath",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 500,
        "wires": [
            [
                "6703fc7324814192"
            ]
        ]
    },
    {
        "id": "6703fc7324814192",
        "type": "function",
        "z": "ca0132a8264ea812",
        "name": "Target filename",
        "func": "const target = `${flow.get(\"DIRECTORY\")}/${msg.file.basename}`; \n\nmsg.payload = target;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 460,
        "wires": [
            [
                "6af34379e0f98f69"
            ]
        ]
    },
    {
        "id": "6af34379e0f98f69",
        "type": "olfnf-file-operations",
        "z": "ca0132a8264ea812",
        "operation": "move",
        "source_file": "filename",
        "source_file_type": "msg",
        "target_file": "payload",
        "target_file_type": "msg",
        "create_directory": true,
        "name": "Move file in folder",
        "x": 810,
        "y": 460,
        "wires": [
            [
                "f8e2948d9c134b15",
                "9a59456185a634a7"
            ]
        ]
    },
    {
        "id": "a0e40d0f80a66d5e",
        "type": "function",
        "z": "ca0132a8264ea812",
        "name": "Clear & Unzip cmd",
        "func": "const target = env.get(\"ExplodedZipPath\");\n\nif(target === \"\" || typeof target === \"undefined\"){\n    throw new Error(\"ENV ExplodedZipPath not set!\")\n}\n\nmsg.payload = `unzip \"${msg.filename}\" -d ${target}`\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 60,
        "wires": [
            [
                "d726e6395e5d706f"
            ]
        ]
    },
    {
        "id": "d726e6395e5d706f",
        "type": "exec",
        "z": "ca0132a8264ea812",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Exec",
        "x": 670,
        "y": 60,
        "wires": [
            [],
            [],
            [
                "d89c7361cd336317"
            ]
        ]
    },
    {
        "id": "680c6df6e4b09500",
        "type": "switch",
        "z": "ca0132a8264ea812",
        "name": "Img file?",
        "property": "ImagesExtension",
        "propertyType": "env",
        "rules": [
            {
                "t": "cont",
                "v": "file.ext",
                "vt": "msg"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 160,
        "y": 420,
        "wires": [
            [
                "49ea38fbe4ed475f"
            ]
        ]
    },
    {
        "id": "4d8965cbc7016948",
        "type": "switch",
        "z": "ca0132a8264ea812",
        "name": "Video file?",
        "property": "VideosExtension",
        "propertyType": "env",
        "rules": [
            {
                "t": "cont",
                "v": "file.ext",
                "vt": "msg"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 170,
        "y": 460,
        "wires": [
            [
                "371601cac371c66e"
            ]
        ]
    },
    {
        "id": "2f8dc29356db656e",
        "type": "switch",
        "z": "ca0132a8264ea812",
        "name": "Doc file?",
        "property": "DocsExtension",
        "propertyType": "env",
        "rules": [
            {
                "t": "cont",
                "v": "file.ext",
                "vt": "msg"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 160,
        "y": 500,
        "wires": [
            [
                "c8f337f33d336140"
            ]
        ]
    },
    {
        "id": "80becc1ee5a351fe",
        "type": "function",
        "z": "ca0132a8264ea812",
        "name": "Clear cmd",
        "func": "const target = env.get(\"ExplodedZipPath\");\n\nif(target === \"\" || typeof target === \"undefined\"){\n    throw new Error(\"ENV ExplodedZipPath not set!\")\n}\n\n\nmsg.payload = `rm -r ${target}/*`\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 60,
        "wires": [
            [
                "fc134917312c5555"
            ]
        ]
    },
    {
        "id": "fc134917312c5555",
        "type": "exec",
        "z": "ca0132a8264ea812",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Exec",
        "x": 310,
        "y": 60,
        "wires": [
            [],
            [],
            [
                "a0e40d0f80a66d5e"
            ]
        ]
    },
    {
        "id": "f8e2948d9c134b15",
        "type": "debug",
        "z": "ca0132a8264ea812",
        "name": "Moved download File",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1060,
        "y": 460,
        "wires": []
    },
    {
        "id": "d89c7361cd336317",
        "type": "debug",
        "z": "ca0132a8264ea812",
        "name": "explodedZip",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 60,
        "wires": []
    },
    {
        "id": "30383ca6d402e1c2",
        "type": "debug",
        "z": "ca0132a8264ea812",
        "name": "Zip File",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 160,
        "y": 100,
        "wires": []
    },
    {
        "id": "91c9dd16d39467c2",
        "type": "debug",
        "z": "ca0132a8264ea812",
        "name": "Regular File",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 170,
        "y": 380,
        "wires": []
    },
    {
        "id": "d147e0c46a236596",
        "type": "catch",
        "z": "ca0132a8264ea812",
        "name": "Check ENV",
        "scope": [
            "a0e40d0f80a66d5e",
            "80becc1ee5a351fe"
        ],
        "uncaught": false,
        "x": 510,
        "y": 620,
        "wires": [
            [
                "ca56a344b3dd17c9"
            ]
        ]
    },
    {
        "id": "ca56a344b3dd17c9",
        "type": "debug",
        "z": "ca0132a8264ea812",
        "name": "ERROR!!!!",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 620,
        "wires": []
    },
    {
        "id": "64c223dfad7ed1f6",
        "type": "function",
        "z": "ca0132a8264ea812",
        "name": "Insert File in DB",
        "func": "// Inserisco elemento in database per tenere traccia dei files che sono stati scaricati\nmsg.topic = `INSERT INTO fileupload (FILENAME, FILEPATH, INFOLDER, TIMESTAMP) VALUES (\"${msg.file.basename}\", \"${msg.file.path}\",0,${new Date().getTime()})`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 180,
        "wires": [
            [
                "7d9bd549dd211a04"
            ]
        ]
    },
    {
        "id": "7d9bd549dd211a04",
        "type": "sqlite",
        "z": "ca0132a8264ea812",
        "mydb": "8ed184d0cab7976b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 1010,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "9a59456185a634a7",
        "type": "function",
        "z": "ca0132a8264ea812",
        "name": "Update file in DB",
        "func": "// Aggiorno il campo \"INFOLDER\" per identificare che\n// effettivamente il file che avevo scaricato è stato\n// messo nella cartella corretta.\n// Questo significa che l'estensione è corretta\nmsg.topic = `UPDATE fileupload set INFOLDER=1 WHERE FILENAME=\"${msg.file.basename}\" AND FILEPATH=\"${msg.file.path}\"`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 500,
        "wires": [
            [
                "36e0135e45f1ebde"
            ]
        ]
    },
    {
        "id": "36e0135e45f1ebde",
        "type": "sqlite",
        "z": "ca0132a8264ea812",
        "mydb": "8ed184d0cab7976b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 1090,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "8671722b2b04ccb2",
        "type": "http in",
        "z": "99c2bf1ea943200a",
        "g": "a3060bc8377bea6e",
        "name": "",
        "url": "/iotgateway/write",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 360,
        "wires": [
            [
                "a7d3014ec758ae68",
                "a49067f625f9ab61"
            ]
        ]
    },
    {
        "id": "a7d3014ec758ae68",
        "type": "debug",
        "z": "99c2bf1ea943200a",
        "g": "a3060bc8377bea6e",
        "name": "Payload Request",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 320,
        "wires": []
    },
    {
        "id": "a49067f625f9ab61",
        "type": "json-full-schema-validator",
        "z": "99c2bf1ea943200a",
        "g": "a3060bc8377bea6e",
        "name": "Schema Validator",
        "property": "payload",
        "propertyType": "msg",
        "func": "{\n    \"type\": \"array\",\n        \"items\": {\n            \"type\" : \"object\",\n            \"properties\": {\n                \"id\": { \"type\": \"string\" },\n                \"v\": { \"type\" : \"string\" }\n            },\n            \"required\": [\"id\", \"v\"]\n        }\n}",
        "x": 470,
        "y": 360,
        "wires": [
            [
                "ef5a2342d5108069"
            ],
            [
                "a2f7092d825f2496"
            ]
        ],
        "outputLabels": [
            "OK",
            "KO"
        ]
    },
    {
        "id": "ef5a2342d5108069",
        "type": "function",
        "z": "99c2bf1ea943200a",
        "g": "a3060bc8377bea6e",
        "name": "Extract Cmd and writeResults",
        "func": "// Set command name\nmsg.cmd = msg.payload[0];\n\n\n// Set kepware payload response\nlet writeResultsArr = msg.payload.map(data => {\n    return {\n        id: data.id,\n        s: true,\n        r: ''\n    };\n});\n\nmsg.payload = {\n    writeResults: writeResultsArr\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 320,
        "wires": [
            [
                "97c7fe41e5423204",
                "4981e0d830f12f29",
                "9f3b83211ef626fd"
            ]
        ]
    },
    {
        "id": "a2f7092d825f2496",
        "type": "function",
        "z": "99c2bf1ea943200a",
        "g": "a3060bc8377bea6e",
        "name": "Malformed JSON Response",
        "func": "// Set BAD return status code\nmsg.statusCode = 400;\nlet writeResultsArr = [];\n\n// Set BAD msg response\n// If payload is an array has first ID\nif (msg.payload.length > 0 && msg.payload[0].id) {\n    writeResultsArr = msg.payload.map(data => {\n        return {\n            id: data.id,\n            s: false,\n            r: \"Malformed JSON\"\n        }\n    });\n\n} else { \n    // If payload isn't array or hasn't firstID\n    writeResultsArr = [{\n        id: \"\",\n        s: false,\n        r: \"Malformed JSON\"\n    }];\n}\n\nmsg.payload = {\n    writeResults: writeResultsArr\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 400,
        "wires": [
            [
                "14886bbe0b246078",
                "340e4cfb29785794"
            ]
        ]
    },
    {
        "id": "544390f09136d7e8",
        "type": "switch",
        "z": "99c2bf1ea943200a",
        "g": "a3060bc8377bea6e",
        "name": "msg.cmd.id",
        "property": "cmd.id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "WEB",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PLIST",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "IMAGE",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PDF",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VIDEO",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "MONITOR",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ROTAZIONE",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "UPLOAD",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CRON",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "RMIMAGE",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "RMVIDEO",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "RMPDF",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "REBOOT",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "POWEROFF",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 15,
        "x": 230,
        "y": 780,
        "wires": [
            [
                "da3ead2c9869c5fe"
            ],
            [
                "ce0809e061f1938c"
            ],
            [
                "598037f8599ec2fb"
            ],
            [
                "fd0bfe50aaa04784"
            ],
            [
                "0d80bff766c677fd"
            ],
            [
                "84708bcbecaff887"
            ],
            [
                "0a4dd8c607623b70"
            ],
            [
                "829384a545fe3a01"
            ],
            [
                "c87e349c6c03acfc"
            ],
            [
                "1875ce9f1fa7a074"
            ],
            [
                "4c6ef64678bb80ac"
            ],
            [
                "a76c8fa5f991f29c"
            ],
            [
                "2703977dac7d8ee9"
            ],
            [
                "ed162f8cc9c08efd"
            ],
            [
                "a753816b986d3065"
            ]
        ]
    },
    {
        "id": "97c7fe41e5423204",
        "type": "http response",
        "z": "99c2bf1ea943200a",
        "g": "a3060bc8377bea6e",
        "name": "200 http response",
        "statusCode": "",
        "headers": {},
        "x": 1070,
        "y": 320,
        "wires": []
    },
    {
        "id": "14886bbe0b246078",
        "type": "http response",
        "z": "99c2bf1ea943200a",
        "g": "a3060bc8377bea6e",
        "name": "400 http response",
        "statusCode": "",
        "headers": {},
        "x": 1070,
        "y": 400,
        "wires": []
    },
    {
        "id": "a753816b986d3065",
        "type": "debug",
        "z": "99c2bf1ea943200a",
        "g": "a3060bc8377bea6e",
        "name": "Cmd not Found",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "cmd.id",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 1180,
        "wires": []
    },
    {
        "id": "0a4dd8c607623b70",
        "type": "subflow:271e7f8f862c3b85",
        "z": "99c2bf1ea943200a",
        "g": "95e067a57b6c3d05",
        "name": "",
        "x": 490,
        "y": 820,
        "wires": [
            [
                "8053965130ed5a57"
            ]
        ]
    },
    {
        "id": "4981e0d830f12f29",
        "type": "debug",
        "z": "99c2bf1ea943200a",
        "g": "a3060bc8377bea6e",
        "name": "Extract Cmd and writeResults",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 280,
        "wires": []
    },
    {
        "id": "340e4cfb29785794",
        "type": "debug",
        "z": "99c2bf1ea943200a",
        "g": "a3060bc8377bea6e",
        "name": "Malformed JSON Response",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 440,
        "wires": []
    },
    {
        "id": "9f3b83211ef626fd",
        "type": "link out",
        "z": "99c2bf1ea943200a",
        "g": "a3060bc8377bea6e",
        "name": "Schema OK",
        "mode": "link",
        "links": [
            "666b43953b1f143c"
        ],
        "x": 995,
        "y": 240,
        "wires": []
    },
    {
        "id": "666b43953b1f143c",
        "type": "link in",
        "z": "99c2bf1ea943200a",
        "g": "a3060bc8377bea6e",
        "name": "Switch CMD",
        "links": [
            "9f3b83211ef626fd"
        ],
        "x": 95,
        "y": 780,
        "wires": [
            [
                "544390f09136d7e8"
            ]
        ]
    },
    {
        "id": "a5d47b82b61421de",
        "type": "comment",
        "z": "99c2bf1ea943200a",
        "g": "a3060bc8377bea6e",
        "name": "SMEUP TOTEM Functionality",
        "info": "",
        "x": 200,
        "y": 320,
        "wires": []
    },
    {
        "id": "84708bcbecaff887",
        "type": "subflow:a86c3d7dbe86dcbf",
        "z": "99c2bf1ea943200a",
        "g": "95e067a57b6c3d05",
        "name": "Stato Monitor",
        "x": 470,
        "y": 780,
        "wires": [
            [
                "9464be68719cfe1a"
            ]
        ]
    },
    {
        "id": "2703977dac7d8ee9",
        "type": "subflow:9c1c79b2f416c9fd",
        "z": "99c2bf1ea943200a",
        "g": "95e067a57b6c3d05",
        "name": "Reboot",
        "x": 460,
        "y": 1060,
        "wires": [
            [
                "eb16757cf1109ac4"
            ]
        ]
    },
    {
        "id": "da3ead2c9869c5fe",
        "type": "subflow:f51b1854e03d3293",
        "z": "99c2bf1ea943200a",
        "g": "c43e545fcca98758",
        "name": "Web Kiosk",
        "x": 470,
        "y": 500,
        "wires": [
            [
                "7d72c40b9e504908"
            ]
        ]
    },
    {
        "id": "ce0809e061f1938c",
        "type": "subflow:190388cf4d3f5366",
        "z": "99c2bf1ea943200a",
        "g": "c43e545fcca98758",
        "name": "Youtube Playlist",
        "x": 480,
        "y": 540,
        "wires": [
            [
                "698a4450fbf4b5e6"
            ]
        ]
    },
    {
        "id": "fd0bfe50aaa04784",
        "type": "subflow:cb65bb54dc1318d0",
        "z": "99c2bf1ea943200a",
        "g": "c43e545fcca98758",
        "name": "Pdf",
        "env": [
            {
                "name": "DIRECTORY",
                "value": "DocsPath",
                "type": "env"
            }
        ],
        "x": 450,
        "y": 620,
        "wires": [
            [
                "1c61d33bacefe0c3"
            ]
        ]
    },
    {
        "id": "0d80bff766c677fd",
        "type": "subflow:6856ac1d2d8fe5fa",
        "z": "99c2bf1ea943200a",
        "g": "c43e545fcca98758",
        "name": "Local Video",
        "env": [
            {
                "name": "DIRECTORY",
                "value": "VideosPath",
                "type": "env"
            }
        ],
        "x": 470,
        "y": 660,
        "wires": [
            [
                "08e5ae010b3c3203"
            ]
        ]
    },
    {
        "id": "1875ce9f1fa7a074",
        "type": "subflow:b15f08f24ad93a57",
        "z": "99c2bf1ea943200a",
        "g": "95e067a57b6c3d05",
        "name": "Remove Images",
        "env": [
            {
                "name": "DIRECTORY",
                "value": "ImagesPath",
                "type": "env"
            },
            {
                "name": "ImagePath",
                "value": "ImagesPath",
                "type": "env"
            }
        ],
        "x": 480,
        "y": 940,
        "wires": [
            [
                "0d7a32d3bc3a1721"
            ]
        ]
    },
    {
        "id": "ed162f8cc9c08efd",
        "type": "subflow:85762727287f2300",
        "z": "99c2bf1ea943200a",
        "g": "95e067a57b6c3d05",
        "name": "Shutdown",
        "x": 460,
        "y": 1100,
        "wires": [
            [
                "090952e975643088"
            ]
        ]
    },
    {
        "id": "c87e349c6c03acfc",
        "type": "subflow:fc57ea0b1c9c9990",
        "z": "99c2bf1ea943200a",
        "g": "95e067a57b6c3d05",
        "name": "Cron",
        "env": [
            {
                "name": "CRONTAB_FILEPATH",
                "value": "CrontabFilePath",
                "type": "env"
            }
        ],
        "x": 450,
        "y": 900,
        "wires": [
            [
                "b4560dff3b75db0a"
            ]
        ]
    },
    {
        "id": "9464be68719cfe1a",
        "type": "debug",
        "z": "99c2bf1ea943200a",
        "g": "95e067a57b6c3d05",
        "name": "Stato Monitor",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 780,
        "wires": []
    },
    {
        "id": "8053965130ed5a57",
        "type": "debug",
        "z": "99c2bf1ea943200a",
        "g": "95e067a57b6c3d05",
        "name": "Rotazione Schermo",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 820,
        "wires": []
    },
    {
        "id": "7d72c40b9e504908",
        "type": "debug",
        "z": "99c2bf1ea943200a",
        "g": "c43e545fcca98758",
        "name": "Web Kiosk",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 500,
        "wires": []
    },
    {
        "id": "698a4450fbf4b5e6",
        "type": "debug",
        "z": "99c2bf1ea943200a",
        "g": "c43e545fcca98758",
        "name": "Youtube Playlist",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 540,
        "wires": []
    },
    {
        "id": "4551916871f8bd36",
        "type": "debug",
        "z": "99c2bf1ea943200a",
        "g": "c43e545fcca98758",
        "name": "Images",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 580,
        "wires": []
    },
    {
        "id": "1c61d33bacefe0c3",
        "type": "debug",
        "z": "99c2bf1ea943200a",
        "g": "c43e545fcca98758",
        "name": "Pdf",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 620,
        "wires": []
    },
    {
        "id": "08e5ae010b3c3203",
        "type": "debug",
        "z": "99c2bf1ea943200a",
        "g": "c43e545fcca98758",
        "name": "Local Video",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 660,
        "wires": []
    },
    {
        "id": "0d7a32d3bc3a1721",
        "type": "debug",
        "z": "99c2bf1ea943200a",
        "g": "95e067a57b6c3d05",
        "name": "Remove Images",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 940,
        "wires": []
    },
    {
        "id": "776a7f9862a0a294",
        "type": "debug",
        "z": "99c2bf1ea943200a",
        "g": "95e067a57b6c3d05",
        "name": "Remove Videos",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 980,
        "wires": []
    },
    {
        "id": "98786b901eae04c9",
        "type": "debug",
        "z": "99c2bf1ea943200a",
        "g": "95e067a57b6c3d05",
        "name": "Remove Docs",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 1020,
        "wires": []
    },
    {
        "id": "eb16757cf1109ac4",
        "type": "debug",
        "z": "99c2bf1ea943200a",
        "g": "95e067a57b6c3d05",
        "name": "Reboot",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 1060,
        "wires": []
    },
    {
        "id": "090952e975643088",
        "type": "debug",
        "z": "99c2bf1ea943200a",
        "g": "95e067a57b6c3d05",
        "name": "Shutdown",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 1100,
        "wires": []
    },
    {
        "id": "b4560dff3b75db0a",
        "type": "debug",
        "z": "99c2bf1ea943200a",
        "g": "95e067a57b6c3d05",
        "name": "Cron",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "rc",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 900,
        "wires": []
    },
    {
        "id": "7df6fd7cf4c952cc",
        "type": "comment",
        "z": "99c2bf1ea943200a",
        "g": "34a1ccf26049ee71",
        "name": "Resume Last command after reboot",
        "info": "",
        "x": 220,
        "y": 60,
        "wires": []
    },
    {
        "id": "6ace0cc962ad24fd",
        "type": "inject",
        "z": "99c2bf1ea943200a",
        "g": "34a1ccf26049ee71",
        "name": "SELECT last FROM sistema",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "3",
        "topic": "SELECT  last FROM  sistema",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 100,
        "wires": [
            [
                "ee5d102664a14d0e"
            ]
        ]
    },
    {
        "id": "ee5d102664a14d0e",
        "type": "sqlite",
        "z": "99c2bf1ea943200a",
        "g": "34a1ccf26049ee71",
        "mydb": "8ed184d0cab7976b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 470,
        "y": 100,
        "wires": [
            [
                "f42fa23f35090652"
            ]
        ]
    },
    {
        "id": "f42fa23f35090652",
        "type": "function",
        "z": "99c2bf1ea943200a",
        "g": "34a1ccf26049ee71",
        "name": "create resume Call",
        "func": "let last = msg.payload[0].LAST;\n\nif ( last !== \"null\" && last !== \"\" ){\n    let splittedLast = last.split('|');\n    let id = splittedLast[0];\n\n    // Remove id from array\n    splittedLast.shift();\n    let settings = splittedLast.join('|');\n    \n    msg.payload = [\n        {\n             \"id\": id,\n             \"v\": \"1|\".concat(settings)\n        }\n    ];\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 100,
        "wires": [
            [
                "ac05f189b712d3f8",
                "9fd5f7c222a3e82a"
            ]
        ]
    },
    {
        "id": "ac05f189b712d3f8",
        "type": "http request",
        "z": "99c2bf1ea943200a",
        "g": "34a1ccf26049ee71",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://127.0.0.1:1880/iotgateway/write",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "x": 890,
        "y": 100,
        "wires": [
            [
                "c79ac39aa5853c59"
            ]
        ]
    },
    {
        "id": "9fd5f7c222a3e82a",
        "type": "debug",
        "z": "99c2bf1ea943200a",
        "g": "34a1ccf26049ee71",
        "name": "Resume Last Payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 140,
        "wires": []
    },
    {
        "id": "c79ac39aa5853c59",
        "type": "debug",
        "z": "99c2bf1ea943200a",
        "g": "34a1ccf26049ee71",
        "name": "Resume Last Response",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 100,
        "wires": []
    },
    {
        "id": "4c6ef64678bb80ac",
        "type": "subflow:b15f08f24ad93a57",
        "z": "99c2bf1ea943200a",
        "g": "95e067a57b6c3d05",
        "name": "Remove Videos",
        "env": [
            {
                "name": "DIRECTORY",
                "value": "VideosPath",
                "type": "env"
            },
            {
                "name": "ImagePath",
                "value": "ImagesPath",
                "type": "env"
            }
        ],
        "x": 480,
        "y": 980,
        "wires": [
            [
                "776a7f9862a0a294"
            ]
        ]
    },
    {
        "id": "a76c8fa5f991f29c",
        "type": "subflow:b15f08f24ad93a57",
        "z": "99c2bf1ea943200a",
        "g": "95e067a57b6c3d05",
        "name": "Remove Docs",
        "env": [
            {
                "name": "DIRECTORY",
                "value": "DocsPath",
                "type": "env"
            },
            {
                "name": "ImagePath",
                "value": "ImagesPath",
                "type": "env"
            }
        ],
        "x": 480,
        "y": 1020,
        "wires": [
            [
                "98786b901eae04c9"
            ]
        ]
    },
    {
        "id": "598037f8599ec2fb",
        "type": "subflow:a9121f18e06a6127",
        "z": "99c2bf1ea943200a",
        "g": "c43e545fcca98758",
        "name": "Images",
        "env": [
            {
                "name": "DIRECTORY",
                "value": "ImagesPath",
                "type": "env"
            }
        ],
        "x": 460,
        "y": 580,
        "wires": [
            [
                "4551916871f8bd36"
            ]
        ]
    },
    {
        "id": "829384a545fe3a01",
        "type": "subflow:a0c114bc4ce3a7fa",
        "z": "99c2bf1ea943200a",
        "g": "95e067a57b6c3d05",
        "name": "",
        "env": [
            {
                "name": "DownloadsPath",
                "value": "DownloadsPath",
                "type": "env"
            },
            {
                "name": "ImagesPath",
                "value": "ImagesPath",
                "type": "env"
            },
            {
                "name": "VideosPath",
                "value": "VideosPath",
                "type": "env"
            },
            {
                "name": "DocsPath",
                "value": "DocsPath",
                "type": "env"
            }
        ],
        "x": 480,
        "y": 860,
        "wires": [
            [
                "d015447780446183"
            ]
        ]
    },
    {
        "id": "d015447780446183",
        "type": "debug",
        "z": "99c2bf1ea943200a",
        "g": "95e067a57b6c3d05",
        "name": "GDrive",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 860,
        "wires": []
    },
    {
        "id": "8fd44612f3b9e7ee",
        "type": "olfnf-folder-capture-in",
        "z": "99c2bf1ea943200a",
        "g": "d235042c5559638c",
        "folder": "DownloadsPath",
        "folder_type": "env",
        "subfolder": true,
        "ignoreempty": true,
        "masks": "*.*",
        "masksregex": false,
        "name": "DownFolder capture",
        "x": 170,
        "y": 1300,
        "wires": [
            [
                "dc2b0b7a3196d11c",
                "be6d0b1c35abc7af"
            ]
        ]
    },
    {
        "id": "dc2b0b7a3196d11c",
        "type": "subflow:ca0132a8264ea812",
        "z": "99c2bf1ea943200a",
        "g": "d235042c5559638c",
        "name": "",
        "env": [
            {
                "name": "ImagesExtension",
                "value": "ImagesExtension",
                "type": "env"
            },
            {
                "name": "VideosExtension",
                "value": "VideosExtension",
                "type": "env"
            },
            {
                "name": "DocsExtension",
                "value": "DocsExtension",
                "type": "env"
            },
            {
                "name": "ImagesPath",
                "value": "ImagesPath",
                "type": "env"
            },
            {
                "name": "VideosPath",
                "value": "VideosPath",
                "type": "env"
            },
            {
                "name": "DocsPath",
                "value": "DocsPath",
                "type": "env"
            },
            {
                "name": "DownloadsPath",
                "value": "DownloadsPath",
                "type": "env"
            },
            {
                "name": "ExplodedZipPath",
                "value": "ExplodedZipPath",
                "type": "env"
            },
            {
                "name": "ExplodeZipPath",
                "value": "ExplodeZipPath",
                "type": "env"
            }
        ],
        "x": 380,
        "y": 1300,
        "wires": [
            [
                "46b1ca9bfe7d89b8"
            ]
        ]
    },
    {
        "id": "46b1ca9bfe7d89b8",
        "type": "debug",
        "z": "99c2bf1ea943200a",
        "g": "d235042c5559638c",
        "name": "Folder Capture",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 1300,
        "wires": []
    },
    {
        "id": "ab4f8ea0f7a919bd",
        "type": "olfnf-folder-capture-in",
        "z": "99c2bf1ea943200a",
        "g": "d235042c5559638c",
        "folder": "ExplodedZipPath",
        "folder_type": "env",
        "subfolder": true,
        "ignoreempty": true,
        "masks": "*.*",
        "masksregex": false,
        "name": "ZipFolder capture",
        "x": 160,
        "y": 1420,
        "wires": [
            [
                "789a3bfab97317b5",
                "5b4484c3fbb87dca"
            ]
        ]
    },
    {
        "id": "789a3bfab97317b5",
        "type": "subflow:ca0132a8264ea812",
        "z": "99c2bf1ea943200a",
        "g": "d235042c5559638c",
        "name": "",
        "env": [
            {
                "name": "ImagesExtension",
                "value": "ImagesExtension",
                "type": "env"
            },
            {
                "name": "VideosExtension",
                "value": "VideosExtension",
                "type": "env"
            },
            {
                "name": "DocsExtension",
                "value": "DocsExtension",
                "type": "env"
            },
            {
                "name": "ImagesPath",
                "value": "ImagesPath",
                "type": "env"
            },
            {
                "name": "VideosPath",
                "value": "VideosPath",
                "type": "env"
            },
            {
                "name": "DocsPath",
                "value": "DocsPath",
                "type": "env"
            },
            {
                "name": "DownloadsPath",
                "value": "DownloadsPath",
                "type": "env"
            },
            {
                "name": "ExplodedZipPath",
                "value": "ExplodedZipPath",
                "type": "env"
            },
            {
                "name": "ExplodeZipPath",
                "value": "ExplodeZipPath",
                "type": "env"
            }
        ],
        "x": 380,
        "y": 1420,
        "wires": [
            [
                "eb226f2b6fdb06db"
            ]
        ]
    },
    {
        "id": "eb226f2b6fdb06db",
        "type": "debug",
        "z": "99c2bf1ea943200a",
        "g": "d235042c5559638c",
        "name": "Folder Capture",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 1420,
        "wires": []
    },
    {
        "id": "be6d0b1c35abc7af",
        "type": "debug",
        "z": "99c2bf1ea943200a",
        "g": "d235042c5559638c",
        "name": "Event DownFolder capture",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 1340,
        "wires": []
    },
    {
        "id": "5b4484c3fbb87dca",
        "type": "debug",
        "z": "99c2bf1ea943200a",
        "g": "d235042c5559638c",
        "name": "Event ZipFolder capture",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 1460,
        "wires": []
    },
    {
        "id": "cb9ae2a8febce7b1",
        "type": "inject",
        "z": "0d7cae74297f6793",
        "g": "fb36774ee386e58d",
        "name": "RIpetizione salvataggio",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 680,
        "wires": [
            [
                "d7b95bd44bf62fd2",
                "70433427a70dfe3b",
                "2d424ee1016ffd9a",
                "45143d9728216165",
                "a9f9839fb3993791"
            ]
        ]
    },
    {
        "id": "7fc49da05ada9de0",
        "type": "debug",
        "z": "0d7cae74297f6793",
        "g": "fb36774ee386e58d",
        "name": "Total Disk Space",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 520,
        "wires": []
    },
    {
        "id": "f9204db9b9963ffb",
        "type": "debug",
        "z": "0d7cae74297f6793",
        "g": "fb36774ee386e58d",
        "name": "% Used Ram",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 600,
        "wires": []
    },
    {
        "id": "a66e2542c1490381",
        "type": "debug",
        "z": "0d7cae74297f6793",
        "g": "fb36774ee386e58d",
        "name": "CPU Temperature",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 760,
        "wires": []
    },
    {
        "id": "08788bc0ecdc1975",
        "type": "debug",
        "z": "0d7cae74297f6793",
        "g": "fb36774ee386e58d",
        "name": "% CPU Load",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 840,
        "wires": []
    },
    {
        "id": "5f5e2d48f0135e0d",
        "type": "function",
        "z": "0d7cae74297f6793",
        "g": "fb36774ee386e58d",
        "name": "Store msg.topic to DB",
        "func": "const ram = msg.payload.memusage;\nmsg.topic = \"UPDATE sistema SET RAM=\" + ram;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 600,
        "wires": [
            [
                "de5b77757b5bfead"
            ]
        ]
    },
    {
        "id": "05c6a9bcbaed8adc",
        "type": "function",
        "z": "0d7cae74297f6793",
        "g": "fb36774ee386e58d",
        "name": "Store msg.topic to DB",
        "func": "const usato = msg.payload[0].used;\nmsg.topic = \"UPDATE sistema set DISCO=\" + usato\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 680,
        "wires": [
            [
                "0c012f1d84949fd1"
            ]
        ]
    },
    {
        "id": "2333e1d48ba2e4f2",
        "type": "function",
        "z": "0d7cae74297f6793",
        "g": "fb36774ee386e58d",
        "name": "Store msg.topic to DB",
        "func": "const totale = msg.payload[0].size;\nmsg.topic = \"UPDATE sistema SET DISCOTOT=\" + totale;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 520,
        "wires": [
            [
                "6e6a7d31ae2869e6"
            ]
        ]
    },
    {
        "id": "5874d7d9bcbe8cfe",
        "type": "debug",
        "z": "0d7cae74297f6793",
        "g": "fb36774ee386e58d",
        "name": "Used Disk Space",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 680,
        "wires": []
    },
    {
        "id": "1b740dececacd27c",
        "type": "function",
        "z": "0d7cae74297f6793",
        "g": "fb36774ee386e58d",
        "name": "Store msg.topic to DB",
        "func": "const temp = msg.payload;\nmsg.topic = \"UPDATE sistema set TEMPERATURA=\" + temp;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 760,
        "wires": [
            [
                "80584b5b1255c365"
            ]
        ]
    },
    {
        "id": "043ab8df78d8784f",
        "type": "function",
        "z": "0d7cae74297f6793",
        "g": "fb36774ee386e58d",
        "name": "Store msg.topic to DB",
        "func": "const cpu = msg.payload;\nmsg.topic = \"UPDATE sistema set CPU=\" + cpu;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 840,
        "wires": [
            [
                "bb79475ff580da3b"
            ]
        ]
    },
    {
        "id": "cd5ca8b56dcc0603",
        "type": "comment",
        "z": "0d7cae74297f6793",
        "g": "fb36774ee386e58d",
        "name": "Save system state",
        "info": "",
        "x": 160,
        "y": 460,
        "wires": []
    },
    {
        "id": "e78ec20130f6bfea",
        "type": "comment",
        "z": "0d7cae74297f6793",
        "g": "fb36774ee386e58d",
        "name": "Total Disk Space",
        "info": "",
        "x": 480,
        "y": 480,
        "wires": []
    },
    {
        "id": "59f8e74630d8381b",
        "type": "comment",
        "z": "0d7cae74297f6793",
        "g": "fb36774ee386e58d",
        "name": "% Used Ram",
        "info": "",
        "x": 470,
        "y": 560,
        "wires": []
    },
    {
        "id": "f5d75d9a624236f1",
        "type": "comment",
        "z": "0d7cae74297f6793",
        "g": "fb36774ee386e58d",
        "name": "Used Disk Space",
        "info": "",
        "x": 480,
        "y": 640,
        "wires": []
    },
    {
        "id": "474538c42c5c3f55",
        "type": "comment",
        "z": "0d7cae74297f6793",
        "g": "fb36774ee386e58d",
        "name": "CPU Temperature",
        "info": "",
        "x": 490,
        "y": 720,
        "wires": []
    },
    {
        "id": "2253d1a43967d5bb",
        "type": "comment",
        "z": "0d7cae74297f6793",
        "g": "fb36774ee386e58d",
        "name": "% CPU Load",
        "info": "",
        "x": 470,
        "y": 800,
        "wires": []
    },
    {
        "id": "4a1795b109331ca6",
        "type": "watch",
        "z": "0d7cae74297f6793",
        "g": "ebc166d187a2a690",
        "name": "",
        "files": "${ImagesFolder}",
        "recursive": "",
        "x": 180,
        "y": 1020,
        "wires": [
            [
                "11148f485a19766a"
            ]
        ]
    },
    {
        "id": "505172e99aa33dda",
        "type": "debug",
        "z": "0d7cae74297f6793",
        "g": "ebc166d187a2a690",
        "name": "List Images Folder",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 1020,
        "wires": []
    },
    {
        "id": "11148f485a19766a",
        "type": "subflow:2e123686d2476212",
        "z": "0d7cae74297f6793",
        "g": "ebc166d187a2a690",
        "name": "",
        "env": [
            {
                "name": "DIRECTORY",
                "value": "ImagesFolder",
                "type": "env"
            },
            {
                "name": "EXTENSIONS",
                "value": "ImagesExtension",
                "type": "env"
            }
        ],
        "x": 380,
        "y": 1020,
        "wires": [
            [
                "cefb27339cb66508"
            ]
        ]
    },
    {
        "id": "cefb27339cb66508",
        "type": "function",
        "z": "0d7cae74297f6793",
        "g": "ebc166d187a2a690",
        "name": "Store msg.topic in DB",
        "func": "let str = msg.payload;\n\nmsg.topic = \"UPDATE sistema set LISTAIMG=\\\"\" + str.join('|') + \"\\\"\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 1020,
        "wires": [
            [
                "7be81b77db72cbd6"
            ]
        ]
    },
    {
        "id": "094018b0fcbd967b",
        "type": "inject",
        "z": "0d7cae74297f6793",
        "g": "ebc166d187a2a690",
        "name": "SELECT * FROM sistema",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SELECT * FROM sistema",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 1340,
        "wires": [
            [
                "f05ef9ac8f736621"
            ]
        ]
    },
    {
        "id": "f05ef9ac8f736621",
        "type": "sqlite",
        "z": "0d7cae74297f6793",
        "g": "ebc166d187a2a690",
        "mydb": "8ed184d0cab7976b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 470,
        "y": 1340,
        "wires": [
            [
                "b7d3ef8b1965bb60"
            ]
        ]
    },
    {
        "id": "b7d3ef8b1965bb60",
        "type": "debug",
        "z": "0d7cae74297f6793",
        "g": "ebc166d187a2a690",
        "name": "Database Information",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload[0]",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 1340,
        "wires": []
    },
    {
        "id": "6e6a7d31ae2869e6",
        "type": "sqlite",
        "z": "0d7cae74297f6793",
        "g": "fb36774ee386e58d",
        "mydb": "8ed184d0cab7976b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 910,
        "y": 520,
        "wires": [
            [
                "7fc49da05ada9de0"
            ]
        ]
    },
    {
        "id": "de5b77757b5bfead",
        "type": "sqlite",
        "z": "0d7cae74297f6793",
        "g": "fb36774ee386e58d",
        "mydb": "8ed184d0cab7976b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 910,
        "y": 600,
        "wires": [
            [
                "f9204db9b9963ffb"
            ]
        ]
    },
    {
        "id": "0c012f1d84949fd1",
        "type": "sqlite",
        "z": "0d7cae74297f6793",
        "g": "fb36774ee386e58d",
        "mydb": "8ed184d0cab7976b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 910,
        "y": 680,
        "wires": [
            [
                "5874d7d9bcbe8cfe"
            ]
        ]
    },
    {
        "id": "80584b5b1255c365",
        "type": "sqlite",
        "z": "0d7cae74297f6793",
        "g": "fb36774ee386e58d",
        "mydb": "8ed184d0cab7976b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 910,
        "y": 760,
        "wires": [
            [
                "a66e2542c1490381"
            ]
        ]
    },
    {
        "id": "bb79475ff580da3b",
        "type": "sqlite",
        "z": "0d7cae74297f6793",
        "g": "fb36774ee386e58d",
        "mydb": "8ed184d0cab7976b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 910,
        "y": 840,
        "wires": [
            [
                "08788bc0ecdc1975"
            ]
        ]
    },
    {
        "id": "7be81b77db72cbd6",
        "type": "sqlite",
        "z": "0d7cae74297f6793",
        "g": "ebc166d187a2a690",
        "mydb": "8ed184d0cab7976b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 810,
        "y": 1020,
        "wires": [
            [
                "505172e99aa33dda"
            ]
        ]
    },
    {
        "id": "b8698506262b99b3",
        "type": "comment",
        "z": "0d7cae74297f6793",
        "g": "ebc166d187a2a690",
        "name": "Elenco file cartella immagini",
        "info": "",
        "x": 200,
        "y": 980,
        "wires": []
    },
    {
        "id": "2647530c8d1cefa8",
        "type": "watch",
        "z": "0d7cae74297f6793",
        "g": "ebc166d187a2a690",
        "name": "",
        "files": "${VideosFolder}",
        "recursive": "",
        "x": 180,
        "y": 1100,
        "wires": [
            [
                "70795216a9c35b5a"
            ]
        ]
    },
    {
        "id": "d11966359f881a0d",
        "type": "debug",
        "z": "0d7cae74297f6793",
        "g": "ebc166d187a2a690",
        "name": "List Videos Folder",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 1100,
        "wires": []
    },
    {
        "id": "70795216a9c35b5a",
        "type": "subflow:2e123686d2476212",
        "z": "0d7cae74297f6793",
        "g": "ebc166d187a2a690",
        "name": "",
        "env": [
            {
                "name": "DIRECTORY",
                "value": "VideosFolder",
                "type": "env"
            },
            {
                "name": "EXTENSIONS",
                "value": "VideosExtension",
                "type": "env"
            }
        ],
        "x": 380,
        "y": 1100,
        "wires": [
            [
                "e92e8e9f4bc8f242"
            ]
        ]
    },
    {
        "id": "e92e8e9f4bc8f242",
        "type": "function",
        "z": "0d7cae74297f6793",
        "g": "ebc166d187a2a690",
        "name": "Store msg.topic in DB",
        "func": "let str = msg.payload;\n\nmsg.topic = \"UPDATE sistema set LISTAVIDEO=\\\"\" + str.join('|') + \"\\\"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 1100,
        "wires": [
            [
                "a80a7e11d3f62e19"
            ]
        ]
    },
    {
        "id": "a80a7e11d3f62e19",
        "type": "sqlite",
        "z": "0d7cae74297f6793",
        "g": "ebc166d187a2a690",
        "mydb": "8ed184d0cab7976b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 810,
        "y": 1100,
        "wires": [
            [
                "d11966359f881a0d"
            ]
        ]
    },
    {
        "id": "9ef19991933fd951",
        "type": "comment",
        "z": "0d7cae74297f6793",
        "g": "ebc166d187a2a690",
        "name": "Elenco file cartella Video",
        "info": "",
        "x": 190,
        "y": 1060,
        "wires": []
    },
    {
        "id": "8c66c476ee5cebf4",
        "type": "inject",
        "z": "0d7cae74297f6793",
        "g": "ebc166d187a2a690",
        "name": "SELECT * FROM sistema",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "select * from sistema",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 1260,
        "wires": [
            [
                "01f81a2812a17874"
            ]
        ]
    },
    {
        "id": "1bea58fc8e3fcf35",
        "type": "function",
        "z": "0d7cae74297f6793",
        "g": "ebc166d187a2a690",
        "name": "function 13",
        "func": "let arr = msg.payload[0];\nlet obj = {};\nlet res = [];\nfor (const [key, value] of Object.entries(arr)) {\n    let objTemp = {\n        id: key,\n        v: value,\n        q: true,\n        t: new Date().getTime()\n    }\n    res.push(objTemp);\n}\nobj.values = res;\nmsg.payload = obj;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 1260,
        "wires": [
            [
                "1af2c2dbb4e321e8"
            ]
        ]
    },
    {
        "id": "01f81a2812a17874",
        "type": "sqlite",
        "z": "0d7cae74297f6793",
        "g": "ebc166d187a2a690",
        "mydb": "8ed184d0cab7976b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 470,
        "y": 1260,
        "wires": [
            [
                "1bea58fc8e3fcf35"
            ]
        ]
    },
    {
        "id": "ab24b88a5852fc8c",
        "type": "debug",
        "z": "0d7cae74297f6793",
        "g": "ebc166d187a2a690",
        "name": "A37 Response",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 1260,
        "wires": []
    },
    {
        "id": "1af2c2dbb4e321e8",
        "type": "http request",
        "z": "0d7cae74297f6793",
        "g": "ebc166d187a2a690",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://172.16.60.103:9091/A37/X39.R15",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 850,
        "y": 1260,
        "wires": [
            [
                "ab24b88a5852fc8c"
            ]
        ]
    },
    {
        "id": "fbe9feb5f5bb5a75",
        "type": "comment",
        "z": "0d7cae74297f6793",
        "g": "ebc166d187a2a690",
        "name": "Spedizione ciclica dati di sistema verso A37",
        "info": "",
        "x": 250,
        "y": 1220,
        "wires": []
    },
    {
        "id": "0bf6c19a44fb6844",
        "type": "comment",
        "z": "0d7cae74297f6793",
        "g": "ebc166d187a2a690",
        "name": "Lettura db sistema",
        "info": "",
        "x": 170,
        "y": 1300,
        "wires": []
    },
    {
        "id": "87262c6b23bc6305",
        "type": "watch",
        "z": "0d7cae74297f6793",
        "g": "ebc166d187a2a690",
        "name": "",
        "files": "${DocsFolder}",
        "recursive": "",
        "x": 170,
        "y": 1180,
        "wires": [
            [
                "298c170aacd146d6"
            ]
        ]
    },
    {
        "id": "dbff78d33bd3e6ec",
        "type": "debug",
        "z": "0d7cae74297f6793",
        "g": "ebc166d187a2a690",
        "name": "List Docs Folder",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 1180,
        "wires": []
    },
    {
        "id": "298c170aacd146d6",
        "type": "subflow:2e123686d2476212",
        "z": "0d7cae74297f6793",
        "g": "ebc166d187a2a690",
        "name": "",
        "env": [
            {
                "name": "DIRECTORY",
                "value": "DocsFolder",
                "type": "env"
            },
            {
                "name": "EXTENSIONS",
                "value": "DocsExtension",
                "type": "env"
            }
        ],
        "x": 380,
        "y": 1180,
        "wires": [
            [
                "8d8d5dd682d82887"
            ]
        ]
    },
    {
        "id": "8d8d5dd682d82887",
        "type": "function",
        "z": "0d7cae74297f6793",
        "g": "ebc166d187a2a690",
        "name": "Store msg.topic in DB",
        "func": "let str = msg.payload;\n\nmsg.topic = \"UPDATE sistema set LISTAPDF=\\\"\" + str.join('|') + \"\\\"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 1180,
        "wires": [
            [
                "ae45b139053a3ebf"
            ]
        ]
    },
    {
        "id": "ae45b139053a3ebf",
        "type": "sqlite",
        "z": "0d7cae74297f6793",
        "g": "ebc166d187a2a690",
        "mydb": "8ed184d0cab7976b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 810,
        "y": 1180,
        "wires": [
            [
                "dbff78d33bd3e6ec"
            ]
        ]
    },
    {
        "id": "08817fd62def48c9",
        "type": "comment",
        "z": "0d7cae74297f6793",
        "g": "ebc166d187a2a690",
        "name": "Elenco file cartella Documenti (PDF)",
        "info": "",
        "x": 220,
        "y": 1140,
        "wires": []
    },
    {
        "id": "d7b95bd44bf62fd2",
        "type": "Drives",
        "z": "0d7cae74297f6793",
        "g": "fb36774ee386e58d",
        "name": "",
        "x": 450,
        "y": 520,
        "wires": [
            [
                "2333e1d48ba2e4f2"
            ]
        ]
    },
    {
        "id": "a9f9839fb3993791",
        "type": "Drives",
        "z": "0d7cae74297f6793",
        "g": "fb36774ee386e58d",
        "name": "",
        "x": 450,
        "y": 680,
        "wires": [
            [
                "05c6a9bcbaed8adc"
            ]
        ]
    },
    {
        "id": "70433427a70dfe3b",
        "type": "Memory",
        "z": "0d7cae74297f6793",
        "g": "fb36774ee386e58d",
        "name": "",
        "scale": "Megabyte",
        "x": 460,
        "y": 600,
        "wires": [
            [
                "5f5e2d48f0135e0d"
            ]
        ]
    },
    {
        "id": "2d424ee1016ffd9a",
        "type": "cpu",
        "z": "0d7cae74297f6793",
        "g": "fb36774ee386e58d",
        "name": "",
        "msgCore": false,
        "msgOverall": false,
        "msgArray": false,
        "msgTemp": true,
        "x": 470,
        "y": 760,
        "wires": [
            [
                "1b740dececacd27c"
            ]
        ]
    },
    {
        "id": "45143d9728216165",
        "type": "cpu",
        "z": "0d7cae74297f6793",
        "g": "fb36774ee386e58d",
        "name": "",
        "msgCore": false,
        "msgOverall": true,
        "msgArray": false,
        "msgTemp": false,
        "x": 470,
        "y": 840,
        "wires": [
            [
                "043ab8df78d8784f"
            ]
        ]
    },
    {
        "id": "95b2a791d439ecb0",
        "type": "inject",
        "z": "0d7cae74297f6793",
        "g": "0295182fd0814c28",
        "name": "SELECT * FROM sistema",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "SELECT * FROM sistema",
        "x": 200,
        "y": 100,
        "wires": [
            [
                "250e194239ef9c72"
            ]
        ]
    },
    {
        "id": "250e194239ef9c72",
        "type": "sqlite",
        "z": "0d7cae74297f6793",
        "g": "0295182fd0814c28",
        "mydb": "8ed184d0cab7976b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 470,
        "y": 100,
        "wires": [
            [
                "078c0703434c3c35"
            ]
        ]
    },
    {
        "id": "078c0703434c3c35",
        "type": "function",
        "z": "0d7cae74297f6793",
        "g": "0295182fd0814c28",
        "name": "set env.dbTableNames vars",
        "func": "let payload = msg.payload;\n\nprocess.env.dbTableNames = Object.getOwnPropertyNames(payload[0]);\n\nmsg.payload = Object.getOwnPropertyNames(payload[0]);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "process",
                "module": "process"
            }
        ],
        "x": 720,
        "y": 100,
        "wires": [
            [
                "748a080ecb9a8dfb"
            ]
        ]
    },
    {
        "id": "5e5448d093ba3a4f",
        "type": "comment",
        "z": "0d7cae74297f6793",
        "g": "0295182fd0814c28",
        "name": "Loop env variable for /iotgateway/read",
        "info": "",
        "x": 210,
        "y": 60,
        "wires": []
    },
    {
        "id": "748a080ecb9a8dfb",
        "type": "debug",
        "z": "0d7cae74297f6793",
        "g": "0295182fd0814c28",
        "name": "dbTableNames",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 100,
        "wires": []
    },
    {
        "id": "9ad17e43abccf3c4",
        "type": "comment",
        "z": "0d7cae74297f6793",
        "g": "e4b6fe2f71716c31",
        "name": "Endpoint for sys request read parameters",
        "info": "",
        "x": 220,
        "y": 220,
        "wires": []
    },
    {
        "id": "69d4b9a80bf42864",
        "type": "http in",
        "z": "0d7cae74297f6793",
        "g": "e4b6fe2f71716c31",
        "name": "",
        "url": "/iotgateway/read",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 260,
        "wires": [
            [
                "b004e3f4e09572d0",
                "5d1a1de1cebc4b50"
            ]
        ]
    },
    {
        "id": "b004e3f4e09572d0",
        "type": "switch",
        "z": "0d7cae74297f6793",
        "g": "e4b6fe2f71716c31",
        "name": "msg.req.query.ids",
        "property": "req.query.ids",
        "propertyType": "msg",
        "rules": [
            {
                "t": "else"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 390,
        "y": 260,
        "wires": [
            [
                "1fc004a523fae7b1"
            ],
            [
                "19a02341ff67cac6"
            ]
        ]
    },
    {
        "id": "1fc004a523fae7b1",
        "type": "function",
        "z": "0d7cae74297f6793",
        "g": "e4b6fe2f71716c31",
        "name": "Set msg.topic with filtered msg.req.query.ids",
        "func": "let ids = msg.req.query.ids;\nlet arrIds = [];\n\n// E' di tipo stringa solo se è singolo\ntypeof (ids) === \"string\"\n    ? arrIds = ids.split(',')\n    : arrIds = ids;\nlet dbTableNames = env.get('dbTableNames');\n\nlet filteredIds = arrIds.filter(elem => dbTableNames.includes(elem));\n\n// Utilizzato per trattare separatamente il db del CHKUPL\narrIds.includes(\"CHKUPL\")\n    ? msg.topic = \"select nomefile,spostato from fileupload\"\n    : msg.topic = \"select \" + filteredIds.join(',').toString() + \" FROM sistema\";\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 220,
        "wires": [
            [
                "dcd8eac8b8294961"
            ]
        ]
    },
    {
        "id": "19a02341ff67cac6",
        "type": "function",
        "z": "0d7cae74297f6793",
        "g": "e4b6fe2f71716c31",
        "name": "Set error response",
        "func": "msg.statusCode = 400;\nmsg.payload = {\n    id: \"\",\n    s: false,\n    r: \"ids field not be empty\",\n    v: \"\",\n    t: new Date().getTime()\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 280,
        "wires": [
            [
                "d4875a09f17a61e3"
            ]
        ]
    },
    {
        "id": "dcd8eac8b8294961",
        "type": "sqlite",
        "z": "0d7cae74297f6793",
        "g": "e4b6fe2f71716c31",
        "mydb": "8ed184d0cab7976b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 970,
        "y": 220,
        "wires": [
            [
                "3ab48e40325b05e8"
            ]
        ]
    },
    {
        "id": "d4875a09f17a61e3",
        "type": "http response",
        "z": "0d7cae74297f6793",
        "g": "e4b6fe2f71716c31",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1510,
        "y": 280,
        "wires": []
    },
    {
        "id": "3ab48e40325b05e8",
        "type": "function",
        "z": "0d7cae74297f6793",
        "g": "e4b6fe2f71716c31",
        "name": "set msg.payload with query results",
        "func": "let resValue = msg.payload;\nlet readResultsArr = [];\n\n// SE ARRAY > 1 deve esserci per forza ids =1 con campo CHKUPL\n// Utilizzato per gestire la risposta multipla del db\n// TODO: cercare come migliorare questa parte!!!\nif (resValue.length > 1 && msg.req.query.ids.includes(\"CHKUPL\")) {\n\n    let resArrValue = Object.entries(resValue).map(elem => {\n        return `N§(${elem[1].nomefile}) V§(${elem[1].spostato})`;\n    });\n\n    readResultsArr = [\n        {\n            id: \"CHKUPL\",\n            s: true,\n            r: \"\",\n            v: resArrValue.join(\"|\"),\n            t: new Date().getTime()\n        }\n    ]\n\n} else {\n\n    resValue = msg.payload[0];\n    readResultsArr = Object.entries(resValue).map(elem => {\n        return {\n            id: elem[0],\n            s: true,\n            r: \"\",\n            v: elem[1],\n            t: new Date().getTime()\n        }\n    })\n}\n\n\nlet readResults = {\n    \"readResults\": readResultsArr\n};\n\nmsg.payload = readResults;\nmsg.statusCode = 200;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 220,
        "wires": [
            [
                "5f7d02cf2e04f0f4",
                "d4875a09f17a61e3"
            ]
        ]
    },
    {
        "id": "591a976044faec25",
        "type": "function",
        "z": "0d7cae74297f6793",
        "g": "e4b6fe2f71716c31",
        "name": "Set error response",
        "func": "msg.statusCode = 500;\nmsg.payload = {\n    id: \"\",\n    s: false,\n    r: `Exception during SQL command with ids=${msg.req.query.ids}`,\n    v: \"\",\n    t: new Date().getTime()\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 340,
        "wires": [
            [
                "d4875a09f17a61e3"
            ]
        ]
    },
    {
        "id": "fa80a359dee8b5a2",
        "type": "catch",
        "z": "0d7cae74297f6793",
        "g": "e4b6fe2f71716c31",
        "name": "",
        "scope": [
            "dcd8eac8b8294961"
        ],
        "uncaught": false,
        "x": 1070,
        "y": 340,
        "wires": [
            [
                "591a976044faec25"
            ]
        ]
    },
    {
        "id": "5d1a1de1cebc4b50",
        "type": "debug",
        "z": "0d7cae74297f6793",
        "g": "e4b6fe2f71716c31",
        "name": "Request READ",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 340,
        "wires": []
    },
    {
        "id": "5f7d02cf2e04f0f4",
        "type": "debug",
        "z": "0d7cae74297f6793",
        "g": "e4b6fe2f71716c31",
        "name": "Response READ",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1530,
        "y": 220,
        "wires": []
    },
    {
        "id": "8d7dfbb252fea970",
        "type": "http request",
        "z": "66d6e2dbdbb2acba",
        "g": "996b52e89a679388",
        "name": "WRITE Mock CALL",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://127.0.0.1:1880/iotgateway/write",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 530,
        "y": 680,
        "wires": [
            [
                "dc89b0d31ac3108c"
            ]
        ]
    },
    {
        "id": "dc89b0d31ac3108c",
        "type": "debug",
        "z": "66d6e2dbdbb2acba",
        "g": "996b52e89a679388",
        "name": "Mock Response",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 680,
        "wires": []
    },
    {
        "id": "4f7a0dd0324ac7a8",
        "type": "inject",
        "z": "66d6e2dbdbb2acba",
        "g": "7e5aef6acb610f0c",
        "name": "Wrong CALL - NO Arr",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"test\":\"test\"}",
        "payloadType": "json",
        "x": 180,
        "y": 240,
        "wires": [
            [
                "ebc8384614fd78bf"
            ]
        ]
    },
    {
        "id": "4380513b942b921b",
        "type": "inject",
        "z": "66d6e2dbdbb2acba",
        "g": "7e5aef6acb610f0c",
        "name": "Wrong CALL - BAD Values",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"id\":\"stringa id1\",\"v\":\"stringa v1\"},{\"id\":\"stringa id2\",\"v\":\"stringa v2\"}]",
        "payloadType": "json",
        "x": 190,
        "y": 280,
        "wires": [
            [
                "ebc8384614fd78bf"
            ]
        ]
    },
    {
        "id": "e878a75e121d86d0",
        "type": "inject",
        "z": "66d6e2dbdbb2acba",
        "g": "7e5aef6acb610f0c",
        "name": "Wrong CALL - Bad Schema",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"test\":\"test\"}]",
        "payloadType": "json",
        "x": 200,
        "y": 320,
        "wires": [
            [
                "ebc8384614fd78bf"
            ]
        ]
    },
    {
        "id": "8705e9fb4b6039a9",
        "type": "comment",
        "z": "66d6e2dbdbb2acba",
        "g": "7e5aef6acb610f0c",
        "name": "Mock Data Call",
        "info": "",
        "x": 140,
        "y": 200,
        "wires": []
    },
    {
        "id": "1846f06ec51ee354",
        "type": "inject",
        "z": "66d6e2dbdbb2acba",
        "g": "996b52e89a679388",
        "name": "MONITOR",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"id\":\"MONITOR\",\"v\":\"0\"}]",
        "payloadType": "json",
        "x": 140,
        "y": 700,
        "wires": [
            [
                "8d7dfbb252fea970"
            ]
        ],
        "info": "# Payload Valori ammissibili\n` # Monitor ON `  \n` [{\"id\":\"MONITOR\",\"v\":\"1\"}] `  \n  \n` # Monitor OFF`  \n` [{\"id\":\"MONITOR\",\"v\":\"0\"}] `\n"
    },
    {
        "id": "8af135267af3479c",
        "type": "inject",
        "z": "66d6e2dbdbb2acba",
        "g": "996b52e89a679388",
        "name": "ROTAZIONE",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"id\":\"ROTAZIONE\",\"v\":\"NORMAL\"}]",
        "payloadType": "json",
        "x": 150,
        "y": 740,
        "wires": [
            [
                "8d7dfbb252fea970"
            ]
        ],
        "info": "# Payload Valori ammissibili\n` # Rotazione default`  \n`[{\"id\":\"ROTAZIONE\",\"v\":\"NORMAL\"}]`  \n  \n` # Rotazione Destra`  \n`[{\"id\":\"ROTAZIONE\",\"v\":\"DX\"}]`\n  \n` # Rotazione Sinistra`  \n`[{\"id\":\"ROTAZIONE\",\"v\":\"SX\"}]`  "
    },
    {
        "id": "bf5a5bb193514ae7",
        "type": "inject",
        "z": "66d6e2dbdbb2acba",
        "g": "996b52e89a679388",
        "name": "KIOSK",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"id\":\"WEB\",\"v\":\"1|http://www.smeup.com\"}]",
        "payloadType": "json",
        "x": 130,
        "y": 500,
        "wires": [
            [
                "8d7dfbb252fea970"
            ]
        ],
        "info": "# Payload Valori ammissibili\n` # Kiosk ON NO-Refresh`  \n` [{\"id\":\"WEB\",\"v\":\"1|https://www.smeup.com\"}] `  \n\n` # Kiosk ON AutoRefresh `  \n` [{\"id\":\"WEB\",\"v\":\"1|https://www.smeup.com|1\"}] `  \n\n` # Kiosk OFF `  \n` [{\"id\":\"WEB\",\"v\":\"0\"}] `  \n  "
    },
    {
        "id": "a69c7be4dd468b0f",
        "type": "inject",
        "z": "66d6e2dbdbb2acba",
        "g": "996b52e89a679388",
        "name": "YT PLAYLIST",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"id\":\"PLIST\",\"v\":\"1234c1234\"}]",
        "payloadType": "json",
        "x": 150,
        "y": 460,
        "wires": [
            [
                "8d7dfbb252fea970"
            ]
        ],
        "info": "# Payload Valori ammissibili\n` # Youtube Playlist ON `  \n` [{\"id\":\"PLIST\",\"v\":\"<idPlaylist>\"}] `  \n  \n` # Youtube Playlist OFF`  \n` [{\"id\":\"PLIST\",\"v\":\"0\"}] ` "
    },
    {
        "id": "2c46d84fd9068a8f",
        "type": "inject",
        "z": "66d6e2dbdbb2acba",
        "g": "996b52e89a679388",
        "name": "IMAGE",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"id\":\"IMAGE\",\"v\":\"1|ALL|5\"}]",
        "payloadType": "json",
        "x": 130,
        "y": 540,
        "wires": [
            [
                "8d7dfbb252fea970"
            ]
        ],
        "info": "# Payload Valori ammissibili\n` # Immagini Tutte `  \n` [{\"id\":\"IMAGE\",\"v\":\"1|ALL|<tempoVisualizzazione>\"}] `  \n` [{\"id\":\"IMAGE\",\"v\":\"1|ALL|5\"}] `  \n    \n` # Immagini Singole `  \n` [{\"id\":\"IMAGE\",\"v\":\"1|<nomeFile>|<tempoVisualizzazione>\"}] `\n` [{\"id\":\"IMAGE\",\"v\":\"1|immagine1.png|5\"}] `\n\n` # Immagini Off `  \n` [{\"id\":\"IMAGE\",\"v\":\"0|<nomeFile>|<tempoVisualizzazione>\"}] `\n` [{\"id\":\"IMAGE\",\"v\":\"0||\"}] `"
    },
    {
        "id": "53c232d00c235e52",
        "type": "inject",
        "z": "66d6e2dbdbb2acba",
        "g": "996b52e89a679388",
        "name": "VIDEO",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"id\":\"VIDEO\",\"v\":\"1|ALL|5\"}]",
        "payloadType": "json",
        "x": 130,
        "y": 620,
        "wires": [
            [
                "8d7dfbb252fea970"
            ]
        ],
        "info": "# Payload Valori ammissibili\n` # Video Tutti `  \n` [{\"id\":\"VIDEO\",\"v\":\"1|ALL|<tempoVisualizzazione>\"}] `  \n` [{\"id\":\"VIDEO\",\"v\":\"1|ALL|5\"}] `  \n    \n` # Video Singolo `  \n` [{\"id\":\"VIDEO\",\"v\":\"1|<nomeFile>|<tempoVisualizzazione>\"}] `\n` [{\"id\":\"VIDEO\",\"v\":\"1|video1.mp4|5\"}] `\n\n` # Video Off `  \n` [{\"id\":\"VIDEO\",\"v\":\"0|<nomeFile>|<tempoVisualizzazione>\"}] `\n` [{\"id\":\"VIDEO\",\"v\":\"0||\"}] `"
    },
    {
        "id": "feed6fc54609d280",
        "type": "inject",
        "z": "66d6e2dbdbb2acba",
        "g": "996b52e89a679388",
        "name": "REBOOT",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"id\":\"REBOOT\",\"v\":\"1\"}]",
        "payloadType": "json",
        "x": 140,
        "y": 780,
        "wires": [
            [
                "8d7dfbb252fea970"
            ]
        ],
        "info": "# Payload Valori ammissibili\n` # Reboot raspberry `  \n` [{\"id\":\"REBOOT\",\"v\":\"1\"}] `  "
    },
    {
        "id": "5bb9ceb0c39e8b88",
        "type": "inject",
        "z": "66d6e2dbdbb2acba",
        "g": "996b52e89a679388",
        "name": "SHUTDOWN",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"id\":\"POWEROFF\",\"v\":\"1\"}]",
        "payloadType": "json",
        "x": 150,
        "y": 820,
        "wires": [
            [
                "8d7dfbb252fea970"
            ]
        ],
        "info": "# Payload Valori ammissibili\n` # Shutdown raspberry `  \n` [{\"id\":\"POWEROFF\",\"v\":\"1\"}] `  "
    },
    {
        "id": "2c9120db6a210a39",
        "type": "comment",
        "z": "66d6e2dbdbb2acba",
        "g": "996b52e89a679388",
        "name": "Mock Data Call",
        "info": "",
        "x": 140,
        "y": 420,
        "wires": []
    },
    {
        "id": "90449f5f0cf6a6e6",
        "type": "inject",
        "z": "66d6e2dbdbb2acba",
        "g": "996b52e89a679388",
        "name": "CRON",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"id\":\"CRON\",\"v\":\"1|[5 * * * * /bin/bash && /bin/sh]\"}]",
        "payloadType": "json",
        "x": 130,
        "y": 980,
        "wires": [
            [
                "8d7dfbb252fea970"
            ]
        ],
        "info": "# Payload Valori ammissibili\n` # Single Cron `  \n` [{\"id\":\"CRON\",\"v\":\"1|[<cron command>]\"}] `  \n` [{\"id\":\"CRON\",\"v\":\"1|[5 * * * * /bin/bash && /bin/sh]\"}] `  \n\n` # Multiple Cron `  \n` [{\"id\":\"CRON\",\"v\":\"1|[5 * * * * /bin/bash script1]|[15 * * * * /bin/sh script2]\"}] `   \n  \n` # Clear Cron `  \n` [{\"id\":\"CRON\",\"v\":\"0\"}] `   \n "
    },
    {
        "id": "f68c93834a4547c1",
        "type": "inject",
        "z": "66d6e2dbdbb2acba",
        "g": "996b52e89a679388",
        "name": "CRON - Clear",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"id\":\"CRON\",\"v\":\"0\"}]",
        "payloadType": "json",
        "x": 150,
        "y": 1060,
        "wires": [
            [
                "8d7dfbb252fea970"
            ]
        ],
        "info": "# Payload Valori ammissibili\n` # Single Cron `  \n` [{\"id\":\"CRON\",\"v\":\"1|[<cron command>]\"}] `  \n` [{\"id\":\"CRON\",\"v\":\"1|[5 * * * * /bin/bash && /bin/sh]\"}] `  \n\n` # Multiple Cron `  \n` [{\"id\":\"CRON\",\"v\":\"1|[5 * * * * /bin/bash script1]|[15 * * * * /bin/sh script2]\"}] `   \n  \n` # Clear Cron `  \n` [{\"id\":\"CRON\",\"v\":\"0\"}] `   \n "
    },
    {
        "id": "8eaf3a09e2e3488d",
        "type": "sqlite",
        "z": "66d6e2dbdbb2acba",
        "g": "80f2b6e54f5427ca",
        "mydb": "8ed184d0cab7976b",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 430,
        "y": 100,
        "wires": [
            [
                "aa2e70f569ffb2ad"
            ]
        ]
    },
    {
        "id": "05e02a164dc4bcc6",
        "type": "inject",
        "z": "66d6e2dbdbb2acba",
        "g": "80f2b6e54f5427ca",
        "name": "SELECT * FROM sistema",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SELECT   * FROM   sistema",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 100,
        "wires": [
            [
                "8eaf3a09e2e3488d"
            ]
        ]
    },
    {
        "id": "aa2e70f569ffb2ad",
        "type": "debug",
        "z": "66d6e2dbdbb2acba",
        "g": "80f2b6e54f5427ca",
        "name": "Database information",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload[0]",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 100,
        "wires": []
    },
    {
        "id": "e093b5e6472b714d",
        "type": "comment",
        "z": "66d6e2dbdbb2acba",
        "g": "80f2b6e54f5427ca",
        "name": "DB Information",
        "info": "",
        "x": 140,
        "y": 60,
        "wires": []
    },
    {
        "id": "3bf0959c7be4726e",
        "type": "inject",
        "z": "66d6e2dbdbb2acba",
        "g": "996b52e89a679388",
        "name": "UPLOAD - Folder",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"id\":\"UPLOAD\",\"v\":\"https://drive.google.com/drive/folders/1UnIcOkHK-3CIMJXDf94HS8OPd9s-HFYN?usp=sharing\"}]",
        "payloadType": "json",
        "x": 160,
        "y": 1100,
        "wires": [
            [
                "8d7dfbb252fea970"
            ]
        ],
        "info": "# Payload Valori ammissibili\n` # Upload File `  \n` [{\"id\":\"UPLOAD\",\"v\":\"https://drive.google.com/file/d/1P3bq1CQWNZgRor16NgtGUXtXeR9GCreT/view?usp=sharing\"}] `  \n\n` # Upload Folder `  \n` [{\"id\":\"UPLOAD\",\"v\":\"https://drive.google.com/drive/folders/1UnIcOkHK-3CIMJXDf94HS8OPd9s-HFYN?usp=sharing\"}] `  \n  "
    },
    {
        "id": "e7f71d67146ba989",
        "type": "inject",
        "z": "66d6e2dbdbb2acba",
        "g": "996b52e89a679388",
        "name": "UPLOAD - File",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"id\":\"UPLOAD\",\"v\":\"https://drive.google.com/file/d/1P3bq1CQWNZgRor16NgtGUXtXeR9GCreT/view?usp=sharing\"}]",
        "payloadType": "json",
        "x": 160,
        "y": 1140,
        "wires": [
            [
                "8d7dfbb252fea970"
            ]
        ],
        "info": "# Payload Valori ammissibili\n` # Upload File `  \n` [{\"id\":\"UPLOAD\",\"v\":\"https://drive.google.com/file/d/1P3bq1CQWNZgRor16NgtGUXtXeR9GCreT/view?usp=sharing\"}] `  \n\n` # Upload Folder `  \n` [{\"id\":\"UPLOAD\",\"v\":\"https://drive.google.com/drive/folders/1UnIcOkHK-3CIMJXDf94HS8OPd9s-HFYN?usp=sharing\"}] `  \n  "
    },
    {
        "id": "ebc8384614fd78bf",
        "type": "http request",
        "z": "66d6e2dbdbb2acba",
        "g": "7e5aef6acb610f0c",
        "name": "WRITE Mock CALL",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://127.0.0.1:1880/iotgateway/write",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 530,
        "y": 280,
        "wires": [
            [
                "c8bb3614434703a2"
            ]
        ]
    },
    {
        "id": "c8bb3614434703a2",
        "type": "debug",
        "z": "66d6e2dbdbb2acba",
        "g": "7e5aef6acb610f0c",
        "name": "Mock Response",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 280,
        "wires": []
    },
    {
        "id": "f46a3f1beb10e098",
        "type": "inject",
        "z": "66d6e2dbdbb2acba",
        "g": "996b52e89a679388",
        "name": "PDF",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"id\":\"PDF\",\"v\":\"1|ALL|5\"}]",
        "payloadType": "json",
        "x": 130,
        "y": 580,
        "wires": [
            [
                "8d7dfbb252fea970"
            ]
        ],
        "info": "# Payload Valori ammissibili\n` # Pdf Tutte `  \n` [{\"id\":\"PDF\",\"v\":\"1|ALL|<tempoVisualizzazione>\"}] `  \n` [{\"id\":\"PDF\",\"v\":\"1|ALL|5\"}] `  \n    \n` # Pdf Singole `  \n` [{\"id\":\"PDF\",\"v\":\"1|<nomeFile>|<tempoVisualizzazione>\"}] `\n` [{\"id\":\"PDF\",\"v\":\"1|pdf1.pdf|5\"}] `\n\n` # Pdf Off `  \n` [{\"id\":\"PDF\",\"v\":\"0|<nomeFile>|<tempoVisualizzazione>\"}] `\n` [{\"id\":\"PDF\",\"v\":\"0||\"}] `"
    },
    {
        "id": "01f04fb60ea356f6",
        "type": "inject",
        "z": "66d6e2dbdbb2acba",
        "g": "996b52e89a679388",
        "name": "RMIMAGE",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"id\":\"RMIMAGE\",\"v\":\"1\"}]",
        "payloadType": "json",
        "x": 140,
        "y": 860,
        "wires": [
            [
                "8d7dfbb252fea970"
            ]
        ],
        "info": "# Payload Valori ammissibili\n` # Clear Image Folder `  \n` [{\"id\":\"RMIMAGE\",\"v\":\"1\"}] `  \n\n` # Clear Video Folder `  \n` [{\"id\":\"RMVIDEO\",\"v\":\"1\"}] `  \n\n` # Clear Pdf Folder `  \n` [{\"id\":\"RMPDF\",\"v\":\"1\"}] `  \n"
    },
    {
        "id": "82870502befb97d6",
        "type": "inject",
        "z": "66d6e2dbdbb2acba",
        "g": "996b52e89a679388",
        "name": "RMVIDEO",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"id\":\"RMVIDEO\",\"v\":\"1\"}]",
        "payloadType": "json",
        "x": 140,
        "y": 900,
        "wires": [
            [
                "8d7dfbb252fea970"
            ]
        ],
        "info": "# Payload Valori ammissibili\n` # Clear Image Folder `  \n` [{\"id\":\"RMIMAGE\",\"v\":\"1\"}] `  \n\n` # Clear Video Folder `  \n` [{\"id\":\"RMVIDEO\",\"v\":\"1\"}] `  \n\n` # Clear Pdf Folder `  \n` [{\"id\":\"RMPDF\",\"v\":\"1\"}] `  \n"
    },
    {
        "id": "6f9bb6de3d7e20c4",
        "type": "inject",
        "z": "66d6e2dbdbb2acba",
        "g": "996b52e89a679388",
        "name": "RMPDF",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"id\":\"RMPDF\",\"v\":\"1\"}]",
        "payloadType": "json",
        "x": 130,
        "y": 940,
        "wires": [
            [
                "8d7dfbb252fea970"
            ]
        ],
        "info": "# Payload Valori ammissibili\n` # Clear Image Folder `  \n` [{\"id\":\"RMIMAGE\",\"v\":\"1\"}] `  \n\n` # Clear Video Folder `  \n` [{\"id\":\"RMVIDEO\",\"v\":\"1\"}] `  \n\n` # Clear Pdf Folder `  \n` [{\"id\":\"RMPDF\",\"v\":\"1\"}] `  \n"
    },
    {
        "id": "e1c1a91d114e5846",
        "type": "inject",
        "z": "66d6e2dbdbb2acba",
        "g": "996b52e89a679388",
        "name": "CHKUPL",
        "props": [
            {
                "p": "url",
                "v": "http://127.0.0.1:1880/iotgateway/read?ids=CHKUPL",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 140,
        "y": 1220,
        "wires": [
            [
                "42ee86e291d4e80e"
            ]
        ]
    },
    {
        "id": "42ee86e291d4e80e",
        "type": "http request",
        "z": "66d6e2dbdbb2acba",
        "g": "996b52e89a679388",
        "name": "READ Mock CALL",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 530,
        "y": 1220,
        "wires": [
            [
                "3904aff0408817d4"
            ]
        ]
    },
    {
        "id": "3904aff0408817d4",
        "type": "debug",
        "z": "66d6e2dbdbb2acba",
        "g": "996b52e89a679388",
        "name": "Mock Response",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 1220,
        "wires": []
    }
]